{"version":3,"sources":["./src/app/pages/admin/sidebar/sidebar.component.ts","./src/app/pages/admin/sidebar/sidebar.component.html","./src/app/pages/admin/view-level/view-level/view-level.component.ts","./src/app/pages/admin/view-level/view-level/view-level.component.html","./src/app/pages/admin/add-question/add-question.component.ts","./src/app/pages/admin/add-question/add-question.component.html","./src/app/pages/user/instructions/instructions.component.ts","./src/app/pages/user/instructions/instructions.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/user/view-ans/view-ans/view-ans.component.ts","./src/app/pages/user/view-ans/view-ans/view-ans.component.html","./src/app/pages/user/load-quiz/load-quiz.component.html","./src/app/pages/user/load-quiz/load-quiz.component.ts","./src/app/services/subject.service.ts","./src/app/services/master.service.ts","./src/app/components/navbar/toolbar/toolbar.component.ts","./src/app/components/navbar/toolbar/toolbar.component.html","./src/app/pages/admin/add-quiz/add-quiz.component.ts","./src/app/pages/admin/add-quiz/add-quiz.component.html","./src/app/services/auth.interceptor.ts","./src/app/pages/admin/chechkAns/check-ans/check-ans.component.ts","./src/app/pages/admin/chechkAns/check-ans/check-ans.component.html","./src/environments/environment.ts","./src/app/pages/user/ranking/ranking/ranking.component.ts","./src/app/pages/user/ranking/ranking/ranking.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/services/login.service.ts","./src/app/pages/admin/view-subject/view-subject/view-subject.component.ts","./src/app/pages/admin/view-subject/view-subject/view-subject.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/question.service.ts","./src/app/pages/admin/add-category/add-category.component.ts","./src/app/pages/admin/add-category/add-category.component.html","./src/app/services/normal.guard.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/profile/profile.component.ts","./src/app/app.module.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.html","./src/app/pages/admin/welcome/welcome.component.ts","./src/app/pages/admin/welcome/welcome.component.html","./src/app/services/category.service.ts","./src/app/pages/admin/view-categories/view-categories.component.ts","./src/app/pages/admin/view-categories/view-categories.component.html","./src/app/services/level.service.ts","./src/app/services/admin.guard.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/pages/user/sidebar/sidebar.component.html","./src/app/pages/user/sidebar/sidebar.component.ts","./src/app/pages/admin/update-quiz/update-quiz.component.ts","./src/app/pages/admin/update-quiz/update-quiz.component.html","./src/app/pages/admin/add-level/add-level/add-level.component.ts","./src/app/pages/admin/add-level/add-level/add-level.component.html","./src/app/pages/admin/upload-user/upload-user/upload-user.component.ts","./src/app/pages/admin/upload-user/upload-user/upload-user.component.html","./src/app/services/helper.ts","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/services/quiz.service.ts","./src/app/pages/admin/add-subject/add-subject/add-subject.component.ts","./src/app/pages/admin/add-subject/add-subject/add-subject.component.html","./src/app/services/user.service.ts","./src/app/pages/admin/dashboard/dashboard.component.ts","./src/app/pages/admin/dashboard/dashboard.component.html","./src/app/pages/user/start/start.component.ts","./src/app/pages/user/start/start.component.html","./src/app/pages/admin/view-quizzes/view-quizzes.component.ts","./src/app/pages/admin/view-quizzes/view-quizzes.component.html","./src/app/app-routing.module.ts","./src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.ts","./src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAOO,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,2EAAU;QACR,kFAAiB;QACf,yEAAmB;QAAA,+DAAI;QAAA,4DAAM;QAC7B,4EAA0C;QACxC,8EAAwB;QAAA,+DAAI;QAAA,4DAAW;QAAC,iEAC1C;QAAA,4DAAS;QACT,4EAAkD;QAChD,8EAAwB;QAAA,0EAAc;QAAA,4DAAW;QAAC,qEACpD;QAAA,4DAAS;QACT,6EAAqD;QACnD,+EAAwB;QAAA,gEAAI;QAAA,4DAAW;QAAC,wEAC1C;QAAA,4DAAS;QACT,6EAAgD;QAC9C,+EAAwB;QAAA,iEAAK;QAAA,4DAAW;QAAC,mEAC3C;QAAA,4DAAS;QACT,6EAAkD;QAChD,+EAAwB;QAAA,yEAAa;QAAA,4DAAW;QAAC,qEACnD;QAAA,4DAAS;QACT,6EAAkD;QAChD,+EAAwB;QAAA,gEAAI;QAAA,4DAAW;QAAC,qEAC1C;QAAA,4DAAS;QACT,6EAAsD;QACpD,+EAAwB;QAAA,+DAAG;QAAA,4DAAW;QAAC,yEACzC;QAAA,4DAAS;QACT,6EAAkD;QAChD,+EAAwB;QAAA,kEAAM;QAAA,4DAAW;QAAC,oEAC5C;QAAA,4DAAS;QAEX,4DAAkB;QACpB,4DAAW;;;;;;;;;;;;;;AC3BX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;ICM/B,yEAA+C;IAC/C,8EAAkC;IAEhC,kFAAiB;IACf,iFAAgB;IACd,uDACF;IAAA,4DAAiB;IACjB,oFAAmB;IACjB,oEAAG;IAAA,uDAA0B;IAAA,4DAAI;IACnC,4DAAoB;IACtB,4DAAkB;IAClB,mFAAkB;IAChB,uDACF;IAAA,4DAAmB;IACnB,mFAAiB;IAEf,6EAIC;IAHD,oUAA2B;IAIzB,oEACF;IAAA,4DAAS;IACX,4DAAkB;IACpB,4DAAW;IAIX,4DAAM;;;IAvBA,0DACF;IADE,4FACF;IAEK,0DAA0B;IAA1B,iGAA0B;IAI/B,0DACF;IADE,2FACF;;ADZK,MAAM,kBAAkB;IAI7B,YAAoB,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;QAFxC,WAAM,GAAG,EAAE,CAAC;IAE+B,CAAC;IAE5C,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,CAC5B,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;aAG3B;iBACG;gBAEF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EAED,CAAC,KAAK,EAAE,EAAE;YACR,EAAE;YACF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,uBAAuB,EAAE,OAAO,CAAC,CAAC;QAC1D,CAAC,CACF,CAAC;IACJ,CAAC;;oFA5BU,kBAAkB;kGAAlB,kBAAkB;QCP/B,yEAAwC;QACtC,4EAAwE;QACtE,0EACF;QAAA,4DAAS;QACX,4DAAM;QACN,yEAAsB;QACtB,+GA4BM;QACN,4DAAM;;QA7B8B,0DAAS;QAAT,+EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACoC;;;;;;;;;;;;;;;ICmB/C,iFAAyD;IACvD,uDACF;IAAA,4DAAa;;;IAFyB,8EAAkB;IACtD,0DACF;IADE,0FACF;;;IAgGJ,iFAGG;IAAA,uDAAsB;IAAA,4DACxB;;;IADE,0DAAsB;IAAtB,wFAAsB;;;IAEzB,iFAGG;IAAA,uDAAsB;IAAA,4DACxB;;;IADE,0DAAsB;IAAtB,wFAAsB;;;IAEzB,iFAGG;IAAA,uDAAsB;IAAA,4DACxB;;;IADE,0DAAsB;IAAtB,wFAAsB;;;IAEzB,iFAGG;IAAA,uDAAsB;IAAA,4DACxB;;;IADE,0DAAsB;IAAtB,wFAAsB;;AD/HlC,MAAM,oBAAoB;IAkB/B,YACU,QAAwB,EACxB,MAAsB,EACtB,SAA0B;QAF1B,aAAQ,GAAR,QAAQ,CAAgB;QACxB,WAAM,GAAN,MAAM,CAAgB;QACtB,cAAS,GAAT,SAAS,CAAiB;QApB7B,WAAM,GAAG,8DAAa,CAAC;QAI9B,aAAQ,GAAG;YACT,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,MAAM,EAAC,EAAE;YACT,KAAK,EAAC,EAAE;YACR,QAAQ,EAAC,cAAc;SACxB,CAAC;IAMC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,SAAS,CAChC,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;aAE5B;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EAED,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mCAAmC,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;YACvE,OAAO;SACR;QAED,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;YACvE,OAAO;SACR;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;YACvE,OAAO;SACR;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,EAAE;YACrE,OAAO;SACR;QACD,2EAA2E;QAC3E,YAAY;QACZ,IAAI;QACJ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,EAAE;YACnE,OAAO;SACR;QAED,aAAa;QACb,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACjD,CAAC,IAAS,EAAE,EAAE;YACZ,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,iCAAiC,EAAE,SAAS,CAAC,CAAC;YACpE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC;QAC5B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAE,0BAA0B,EAAE,OAAO,CAAC,CAAC;QAC1D,CAAC,CACF,CAAC;IACJ,CAAC;;wFApFU,oBAAoB;oGAApB,oBAAoB;QCbjC,yEAA+B;QAC7B,yEAAsB;QACpB,yEAAuB;QACrB,qEAAI;QACF,4EAAgB;QAAA,0EAAgC;QAAA,uDAAY;QAAA,4DAAO;QACrE,4DAAK;QAEL,2EAAU;QACR,kFAAiB;QACf,oFAAmB;QACjB,kGACF;QAAA,4DAAoB;QACtB,4DAAkB;QAClB,oFAAkB;QAChB,2EAA2C;QAAxB,6IAAU,gBAAY,IAAC;QAGxC,0EAAiB;QACf,0EAAsB;QAGpB,qFAA8B;QAC5B,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,iFAAuD;QAA9B,uMAA6B;QACpD,gIAEa;QACf,4DAAa;QACf,4DAAiB;QACnB,4DAAM;QACN,0EAAsB;QAEpB,qFAA8B;QAC5B,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,kFAAsD;QAA7B,sMAA4B;QACnD,kFAAsB;QAAA,+DAAG;QAAA,4DAAa;QACtC,kFAAsB;QAAA,+DAAG;QAAA,4DAAa;QACtC,kFAAsB;QAAA,+DAAG;QAAA,4DAAa;QACtC,kFAAsB;QAAA,+DAAG;QAAA,4DAAa;QACtC,kFAAsB;QAAA,+DAAG;QAAA,4DAAa;QACtC,kFAAsB;QAAA,+DAAG;QAAA,4DAAa;QACtC,kFAAsB;QAAA,+DAAG;QAAA,4DAAa;QACtC,kFAAsB;QAAA,+DAAG;QAAA,4DAAa;QACtC,kFAAsB;QAAA,+DAAG;QAAA,4DAAa;QACtC,kFAAuB;QAAA,gEAAI;QAAA,4DAAa;QACxC,kFAAuB;QAAA,gEAAI;QAAA,4DAAa;QACxC,kFAAuB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,4DAAa;QACf,4DAAiB;QACnB,4DAAM;QACR,4DAAM;QAGN,gFAIC;QADC,sMAA8B;QAC/B,4DAAW;QAIZ,0EAAiB;QACf,0EAAsB;QAGpB,qFAA6B;QAC3B,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,6EAME;QAJA,mMAA8B;QAFhC,4DAME;QACJ,4DAAiB;QACnB,4DAAM;QACN,0EAAsB;QAEpB,qFAA6B;QAC3B,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,6EAME;QAJA,mMAA8B;QAFhC,4DAME;QACJ,4DAAiB;QACnB,4DAAM;QACR,4DAAM;QAEN,0EAAiB;QACf,0EAAsB;QAEpB,qFAA6B;QAC3B,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,6EAKE;QAJA,mMAA8B;QADhC,4DAKE;QACJ,4DAAiB;QACnB,4DAAM;QACN,0EAAsB;QAEpB,qFAA6B;QAC3B,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,6EAKE;QAJA,mMAA8B;QADhC,4DAKE;QACJ,4DAAiB;QACnB,4DAAM;QACR,4DAAM;QAGN,qFAA6B;QAC3B,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,kFAAiE;QAA5C,uMAA6B;QAChD,iIAIC;QACD,iIAIC;QACD,iIAIC;QACD,iIAIC;QACH,4DAAa;QACf,4DAAiB;QAEjB,2EAAmC;QACjC,8EAA0C;QAAA,+DAAG;QAAA,4DAAS;QACxD,4DAAM;QACR,4DAAO;QACT,4DAAmB;QACrB,4DAAW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAM;;QArJkD,0DAAY;QAAZ,2EAAY;QAmBzB,2DAA6B;QAA7B,wFAA6B;QAC1B,0DAAU;QAAV,gFAAU;QAUb,0DAA4B;QAA5B,uFAA4B;QAoBzD,2DAAiB;QAAjB,8EAAiB;QAeX,0DAA8B;QAA9B,yFAA8B;QAa9B,0DAA8B;QAA9B,yFAA8B;QAe9B,0DAA8B;QAA9B,yFAA8B;QAY9B,0DAA8B;QAA9B,yFAA8B;QAYf,0DAA6B;QAA7B,wFAA6B;QAE7C,0DAAsB;QAAtB,sFAAsB;QAKtB,0DAAsB;QAAtB,sFAAsB;QAKtB,0DAAsB;QAAtB,sFAAsB;QAKtB,0DAAsB;QAAtB,sFAAsB;;;;;;;;;;;;;;ACvIzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;AAOxB,MAAM,qBAAqB;IAIhC,YACU,MAAsB,EACtB,KAAkB,EAClB,OAAe;QAFf,WAAM,GAAN,MAAM,CAAgB;QACtB,UAAK,GAAL,KAAK,CAAa;QAClB,YAAO,GAAP,OAAO,CAAQ;IACtB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3C,yBAAyB;QAEzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CACpC,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;aAEhC;QAAA,CAAC,EACJ,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,4BAA4B,CAAC,CAAC;QACtC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS;QACP,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,gCAAgC;YAEvC,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,OAAO;YAC1B,cAAc,EAAE,YAAY;YAC5B,IAAI,EAAE,MAAM;SACb,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,iDAAiD;YACjD,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,WAAW,GAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAC3B,IAAI,OAAO,GAAG,aAAa,CAAC;gBAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/C;iBAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC1B,kDAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;0FA9CU,qBAAqB;qGAArB,qBAAqB;QCVlC,yEAA+B;QAC7B,yEAAuB;QACrB,yEAAiB;QACf,yEAAuB;QACrB,8EAAuB;QACrB,kFAAiB;QAEf,iFAAgB;QACd,yGACF;QAAA,4DAAiB;QACjB,oFAAmB;QAAC,gFAAoB;QAAA,4DAAoB;QAC9D,4DAAkB;QAElB,uFAA+B;QAG7B,sEAAI;QAAA,wDAAmB;QAAA,4DAAK;QAC5B,qEAAG;QAAA,wDAAyB;QAAA,4DAAI;QAEhC,0EAA2B;QAC3B,iEAAM;QACN,sEAAI;QAAA,kFAAsB;QAAA,4DAAK;QAE/B,sEAAI;QACF,sEAAI;QAAA,mGAAuC;QAAA,4DAAK;QAGhD,sEAAI;QACF,6FACA;QAAA,qEAAG;QAAC,wDAAqC;QAAA,4DAAI;QAC/C,4DAAK;QACL,sEAAI;QAAA,yGAA6C;QAAA,4DAAK;QACtD,sEAAI;QACF,uEAAU;QAAA,qEAAG;QAAA,wDAAkC;QAAA,4DAAI;QAAC,2EAEtD;QAAA,4DAAK;QACL,sEAAI;QACF,oFACA;QAAA,qEAAG;QAAA,wDAAkD;QAAA,4DAAI;QAAA,kGAE3D;QAAA,4DAAK;QACL,sEAAI;QAAA,0FAA8B;QAAA,4DAAK;QACzC,4DAAK;QAEL,0EAA2B;QAC3B,iEAAM;QACN,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,sEAAI;QACF,sEAAI;QAAA,kEAAM;QAAA,qEAAG;QAAA,sEAAU;QAAA,4DAAI;QAAC,qFAAwB;QAAA,4DAAK;QACzD,sEAAI;QACF,6HACF;QAAA,4DAAK;QACL,sEAAI;QACF,6HACF;QAAA,4DAAK;QACL,sEAAI;QAAA,kGAAsC;QAAA,4DAAK;QAC/C,sEAAI;QAAA,kHAAsD;QAAA,4DAAK;QAC/D,sEAAI;QACF,mIAEF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAmB;QACnB,uFAAsC;QAEpC,6EAKC;QAJC,8IAAS,eAAW,IAAC;QAKrB,wEACF;QAAA,4DAAS;QACX,4DAAmB;QACrB,4DAAW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA9DU,2DAAmB;QAAnB,kFAAmB;QACpB,0DAAyB;QAAzB,wFAAyB;QAYpB,2DAAqC;QAArC,8GAAqC;QAI5B,0DAAkC;QAAlC,0GAAkC;QAK5C,0DAAkD;QAAlD,8HAAkD;;;;;;;;;;;;;;;;;;;;AC/B9D,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEAA+B;QAC7B,yEAAuB;QACrB,yEAAsB;QACpB,yEAA8C;QAC5C,qEAAI;QAAA,gFAAqB;QAAA,4DAAK;QAC9B,4EAA0C;QAAA,oEAAS;QAAA,4DAAS;QAC9D,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;ACLN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;;IC2CG,2EAAiC;IAAA,mEAAQ;IAAA,4DAAW;;;IAGpD,2EAAkC;IAAA,mEAAQ;IAAA,4DAAW;;;IAMtD,2EAAkC;IAAA,mEAAQ;IAAA,4DAAW;;;IAGrD,2EAAiC;IAAA,mEAAQ;IAAA,4DAAW;;;IAvB3E,+EAAwE;IAElE,mFAAkB;IACd,oEAAG;IACD,oEAAG;IAAA,uDAAc;IAAA,4DAAI;IAErB,sEAAkD;IACpD,4DAAI;IACJ,yEAA4B;IAC5B,0EAAsB;IACpB,yEAAuB;IACrB,uDAAU;IAAA,2IAAoD;IAChE,4DAAM;IACN,0EAAsB;IACpB,wDAAU;IAAA,2IAAqD;IACnE,4DAAM;IACN,4DAAM;IAEN,2EAAqB;IACnB,0EAAuB;IACtB,wDAAU;IAAA,2IAAqD;IAChE,4DAAM;IACN,0EAAuB;IACtB,wDAAU;IAAA,2IAAoD;IAC/D,4DAAM;IACR,4DAAM;IACR,4DAAmB;IAE3B,4DAAW;;;;;IAxBI,0DAAc;IAAd,qFAAc;IAEE,0DAAuB;IAAvB,iJAAuB;IAKxC,0DAAU;IAAV,oFAAU;IAAW,0DAAoB;IAApB,qFAAoB;IAGzC,0DAAU;IAAV,oFAAU;IAAY,0DAAoB;IAApB,qFAAoB;IAM3C,0DAAU;IAAV,oFAAU;IAAY,0DAAoB;IAApB,qFAAoB;IAG1C,0DAAU;IAAV,oFAAU;IAAW,0DAAoB;IAApB,qFAAoB;;;IAiBlC,2EAAiC;IAAA,mEAAQ;IAAA,4DAAW;;;IAGpD,2EAAkC;IAAA,mEAAQ;IAAA,4DAAW;;;IAMtD,2EAAkC;IAAA,mEAAQ;IAAA,4DAAW;;;IAGrD,2EAAiC;IAAA,mEAAQ;IAAA,4DAAW;;;IAGjE,oEAAsC;IAAA,oEAAG;IAAA,yEAAc;IAAA,4DAAI;IAAC,uDAAU;IAAA,4DAAI;;;IAAd,0DAAU;IAAV,oFAAU;;;IACtE,oEAAsC;IAAA,oEAAG;IAAA,yEAAc;IAAA,4DAAI;IAAC,uDAAU;IAAA,4DAAI;;;IAAd,0DAAU;IAAV,oFAAU;;;IACtE,oEAAsC;IAAA,oEAAG;IAAA,yEAAc;IAAA,4DAAI;IAAC,uDAAU;IAAA,4DAAI;;;IAAd,0DAAU;IAAV,oFAAU;;;IACtE,oEAAsC;IAAA,oEAAG;IAAA,yEAAc;IAAA,4DAAI;IAAC,uDAAU;IAAA,4DAAI;;;IAAd,0DAAU;IAAV,oFAAU;;;IA7B5E,+EAAwE;IAEtE,mFAAkB;IACd,oEAAG;IACD,oEAAG;IAAA,uDAAc;IAAA,4DAAI;IAErB,sEAAkD;IACpD,4DAAI;IACJ,yEAA4B;IAC5B,0EAAsB;IACpB,yEAAuB;IACrB,uDAAU;IAAA,2IAAoD;IAChE,4DAAM;IACN,0EAAsB;IACpB,wDAAU;IAAA,2IAAqD;IACnE,4DAAM;IACN,4DAAM;IAEN,2EAAqB;IACnB,0EAAuB;IACtB,wDAAU;IAAA,2IAAqD;IAChE,4DAAM;IACN,0EAAuB;IACtB,wDAAU;IAAA,2IAAoD;IAC/D,4DAAM;IACR,4DAAM;IACN,6HAA0E;IAC1E,6HAA0E;IAC1E,6HAA0E;IAC1E,6HAA0E;IAC5E,4DAAmB;IAE3B,4DAAW;;;;;IA5BI,0DAAc;IAAd,qFAAc;IAEE,0DAAuB;IAAvB,iJAAuB;IAKxC,0DAAU;IAAV,oFAAU;IAAW,0DAAoB;IAApB,qFAAoB;IAGzC,0DAAU;IAAV,oFAAU;IAAY,0DAAoB;IAApB,qFAAoB;IAM3C,0DAAU;IAAV,oFAAU;IAAY,0DAAoB;IAApB,qFAAoB;IAG1C,0DAAU;IAAV,oFAAU;IAAW,0DAAoB;IAApB,qFAAoB;IAGxC,0DAAgC;IAAhC,iGAAgC;IAChC,0DAAgC;IAAhC,iGAAgC;IAChC,0DAAgC;IAAhC,iGAAgC;IAChC,0DAAgC;IAAhC,iGAAgC;;;IA3D1C,sEAAuD;IACvD,gIA4BW;IAAA,gEAAI;IACf,gIAgCO;IACP,4DAAM;;;IA9DK,0DAAwB;IAAxB,yFAAwB;IA6BxB,0DAAwB;IAAxB,yFAAwB;;ADrDtC,MAAM,gBAAgB;IAU3B,YACU,MAAsB,EACtB,KAAkB,EAClB,OAAe;QAFf,WAAM,GAAN,MAAM,CAAgB;QACtB,UAAK,GAAL,KAAK,CAAa;QAClB,YAAO,GAAP,OAAO,CAAQ;QAVzB,WAAM,GAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtC,qBAAgB,GAAC;YACf,GAAG,EAAC,EAAE;YACN,MAAM,EAAC,EAAE;SACV;IAOE,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,MAAM,eAAe,GAAE,EAAE;QACzB,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM;QACvC,eAAe,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,SAAS,CAClD,CAAC,MAAW,EAAE,EAAE;YACZ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAExB,CAAC,EACH,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,4BAA4B,CAAC,CAAC;QACtC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS;QACP,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,gCAAgC;YAEvC,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,OAAO;YAC1B,cAAc,EAAE,YAAY;YAC5B,IAAI,EAAE,MAAM;SACb,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,iDAAiD;YACjD,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/C;iBAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC1B,kDAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gFArDU,gBAAgB;gGAAhB,gBAAgB;QCZ7B,yEAA+B;QAC3B,yEAA6B;QAC3B,yEAA2C;QACzC,yEAAmC;QACjC,4EAAwG;QAAA,+DAAI;QAAA,4DAAS;QACvH,4DAAM;QACR,4DAAM;QACN,yEAAiB;QACf,yEAAuB;QAGrB,8EAAwB;QACtB,mFAAkB;QACd,0EAAiB;QACjB,0EAAsB;QAClB,sEAAI;QAAA,qEAAG;QAAA,6EAAiB;QAAA,4DAAI;QAAC,wDAAuB;QAAA,4DAAK;QAC7D,4DAAM;QACN,0EAAsB;QAClB,sEAAI;QAAA,qEAAG;QAAA,4EAAgB;QAAA,4DAAI;QAAC,wDAA8B;QAAA,4DAAK;QACnE,4DAAM;QACN,4DAAM;QACN,0EAAiB;QACjB,qEAEM;QACN,qEAEM;QACR,4DAAM;QAGN,0EAA4B;QAE9B,4DAAmB;QACrB,4DAAW;QAAA,iEAAI;QACf,8GA+DM;QAGR,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA1FyC,2DAAuB;QAAvB,kGAAuB;QAGxB,0DAA8B;QAA9B,uGAA8B;QAiBjD,0DAAqB;QAArB,yFAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC/B1C,8EAAgE;IAC9D,kFAAiB;IACf,qEAAwD;IACxD,iFAAgB;IACd,uDACF;IAAA,4DAAiB;IAEjB,oFAAmB;IACjB,uDACF;IAAA,4DAAoB;IACpB,oFAAmB;IACjB,0EAAgC;IAChC,wEAA4C;IAAA,wDAA0B;IAAA,4DAAI;IAAA,yEAAyB;IAAA,wDAA4B;IAAA,4DAAI;IACrI,4DAAM;IACN,4DAAoB;IACtB,4DAAkB;IAClB,oFAAkB;IAChB,yEAA8B;IAAA,wDAAmB;IAAA,4DAAI;IAEvD,4DAAmB;IACnB,mFAAiB;IACf,2EAA+B;IAE/B,8EAMC;IAAA,4EAAU;IAAA,sEAAU;IAAA,4DAAW;IAC9B,mEACF;IAAA,4DAAS;IAAA,mEACT;IAGA,8EAEC;IAAA,4EAAU;IAAC,sEAAS;IAAA,4DAAW;IAAA,mEAAO;IAAA,4DAAS;IAClD,4DAAM;IACN,4DAAkB;IACpB,4DAAW;;;IApCL,0DACF;IADE,sFACF;IAGE,0DACF;IADE,0FACF;IAG8C,0DAA0B;IAA1B,mGAA0B;IAA6B,0DAA4B;IAA5B,mGAA4B;IAKnG,0DAAmB;IAAnB,iFAAmB;IAU/C,0DAAuD;IAAvD,mHAAuD;IASzD,0DAAkD;IAAlD,8GAAkD;;;IAKtD,+EAAiG;IAC/F,kFAAiB;IACf,qEAAwD;IACxD,iFAAgB;IACd,uDACF;IAAA,4DAAiB;IAEjB,oFAAmB;IACjB,uDACF;IAAA,4DAAoB;IACpB,oFAAmB;IACjB,0EAAgC;IAChC,wEAA4C;IAAA,wDAA0B;IAAA,4DAAI;IAAA,yEAAyB;IAAA,wDAA4B;IAAA,4DAAI;IACrI,4DAAM;IACN,4DAAoB;IACtB,4DAAkB;IAClB,oFAAkB;IAChB,yEAA8B;IAAA,wDAAmB;IAAA,4DAAI;IAEvD,4DAAmB;IACnB,mFAAiB;IACf,2EAA+B;IAS/B,8EAEC;IAAA,kEAAM;IAAA,4DAAS;IAChB,8EAEC;IAAA,mEAAO;IAAA,4DAAS;IACnB,4DAAM;IACN,4DAAkB;IACpB,4DAAW;;;IAlCL,0DACF;IADE,sFACF;IAGE,0DACF;IADE,0FACF;IAG8C,0DAA0B;IAA1B,mGAA0B;IAA6B,0DAA4B;IAA5B,mGAA4B;IAKnG,0DAAmB;IAAnB,iFAAmB;IAcjD,0DAAmD;IAAnD,+GAAmD;IAGnD,0DAAkD;IAAlD,8GAAkD;;;IA5ExD,yEAAgD;IAC9C,oIAwCW;IACX,oIAsCW;IACb,4DAAM;;;IAhFoB,0DAAsC;IAAtC,uGAAsC;IAyCtC,0DAAqC;IAArC,sGAAqC;;;IAyC/D,0EAAmD;IACjD,2EAAU;IACR,mFAAkB;IAChB,qEAAI;IAAA,mFAAwB;IAAA,4DAAK;IACnC,4DAAmB;IACrB,4DAAW;IACb,4DAAM;;;IA1FR,yEAAsC;IACpC,mHAiFM;IAEN,mHAMM;IACR,4DAAM;;;IA1FgC,0DAAU;IAAV,mFAAU;IAmFtB,0DAAyB;IAAzB,4FAAyB;;AC7EhD,MAAM,iBAAiB;IAI5B,YAAoB,MAAsB,EAAU,KAAkB;QAAlD,WAAM,GAAN,MAAM,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAa;QADtE,WAAM,GAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACmC,CAAC;IAE1E,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;gBACnB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBAEjC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAChD,CAAC,MAAW,EAAE,EAAE;oBACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;wBAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;qBAE5B;gBAAA,CAAC,EACJ,CAAC,KAAK,EAAE,EAAE;oBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,KAAK,CAAC,8BAA8B,CAAC,CAAC;gBACxC,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;gBAElC,IAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACzD,CAAC,MAAW,EAAE,EAAE;oBACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;wBAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;qBAE5B;gBAAA,CAAC,EACJ,CAAC,KAAK,EAAE,EAAE;oBACR,KAAK,CAAC,4BAA4B,CAAC,CAAC;gBACtC,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kFAvCU,iBAAiB;iGAAjB,iBAAiB;QDT9B,yEAAyD;QACvD,yEAA6B;QAC3B,6GA2FM;QACR,4DAAM;QACR,4DAAM;;QA7FqB,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;AEAxC;AAAA;AAAA;AAAA;AAAA;AAA+B;;;AAKxB,MAAM,cAAc;IAEzB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAG,CAAC;IACzC,yBAAyB;IAClB,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,WAAW,CAAC,CAAC;IAC/C,CAAC;IAED,kBAAkB;IACX,UAAU,CAAC,OAAO;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,+CAAO,eAAe,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;;4EAXU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;ACAb,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,UAAU;QACR,OAAO,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAE,IAAI;IAC7C,CAAC;;0EANU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;;;;;;;;;;ICEpE,sEAAwB;IACtB,4EAAiD;IAAzB,sTAAuB;IAC7C,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC3B,4DAAS;IACX,4DAAM;;;IACN,iEAEM;;;;IAIN,4EAAgH;IAApB,oTAAkB;IAC5G,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;ADNN,MAAM,gBAAgB;IAY3B,YAAoB,OAAqB,EAAS,MAAa;QAA3C,YAAO,GAAP,OAAO,CAAc;QAAS,WAAM,GAAN,MAAM,CAAO;QARrD,kBAAa,GAAG,IAAI,0DAAY,EAAE,CAAC;IAQsB,CAAC;IALpE,WAAW;QACV,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAKC,QAAQ;IACR,CAAC;IACD,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAClC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IACD,QAAQ;QACN,OAAO,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;;gFAxBU,gBAAgB;gGAAhB,gBAAgB;QCT7B,iFAA6B;QAEzB,4GAIM;QACN,4GAEM;QAEN,yEAA6C;QAAA,oEAAuD;QAAA,4DAAM;QAE1G,kHAES;QAEX,4DAAc;;QAfN,0DAAgB;QAAhB,gFAAgB;QAKhB,0DAAoB;QAApB,sFAAoB;QAMjB,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;ACR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;;;;;;;;ICMjB,iFAA0D;IACxD,uDACF;IAAA,4DAAa;;;IAFwB,gFAAoB;IACvD,0DACF;IADE,4FACF;;;IA2EA,iFAA4D;IAC1D,uDACF;IAAA,4DAAa;;;IAF4B,8EAAkB;IACzD,0DACF;IADE,0FACF;;AD9EP,MAAM,gBAAgB;IAc3B,YACU,IAAqB,EACrB,MAAoB,EACpB,MAAmB,EACnB,KAAkB;QAHlB,SAAI,GAAJ,IAAI,CAAiB;QACrB,WAAM,GAAN,MAAM,CAAc;QACpB,WAAM,GAAN,MAAM,CAAa;QACnB,UAAK,GAAL,KAAK,CAAa;QAjB5B,eAAU,GAAG,EAAE,CAAC;QAChB,WAAM,GAAG,EAAE,CAAC;QAEZ,aAAQ,GAAG;YACT,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,iBAAiB,EAAE,EAAE;YACrB,MAAM,EAAE,IAAI;YACZ,MAAM,EAAC,EAAE;YACT,QAAQ,EAAC,EAAE;SACZ,CAAC;IAOC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAChE,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;aAE/B;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EAED,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mCAAmC,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC,CACF,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,CAC5B,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;aAE3B;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EAED,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mCAAmC,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC,CACF,CAAC;IACJ,CAAC;IACD,EAAE;IACF,OAAO;QACL,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,EAAE;YACnE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE;gBACxC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,OAAO;SACR;QAED,eAAe;QAEf,aAAa;QACb,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzC,CAAC,IAAI,EAAE,EAAE;YACP,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;YACjD,IAAI,CAAC,QAAQ,GAAG;gBACd,KAAK,EAAE,EAAE;gBACT,WAAW,EAAE,EAAE;gBACf,QAAQ,EAAE,EAAE;gBACZ,iBAAiB,EAAE,EAAE;gBACrB,MAAM,EAAE,IAAI;gBACZ,MAAM,EAAC,EAAE;gBACT,QAAQ,EAAC,EAAE;aAEZ,CAAC;QACJ,CAAC,EAED,CAAC,KAAK,EAAE,EAAE;YACR,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,yBAAyB,EAAE,OAAO,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;gFA3FU,gBAAgB;gGAAhB,gBAAgB;QCZ7B,2EAAU;QACR,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,yEAAuB;QACrB,yEAAiB;QACf,yEAAkC;QAChC,0EAA6B;QAAvB,4IAAY,aAAS,IAAC;QAG1B,oFAAoD;QAClD,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,iFAAyD;QAAhC,qMAA+B;QACtD,4HAEa;QACf,4DAAa;QACf,4DAAiB;QAEjB,qFAA+C;QAC7C,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,4EAOE;QANA,6LAA4B;QAD9B,4DAOE;QACJ,4DAAiB;QAIjB,qFAA+C;QAC7C,6EAAW;QAAA,8EAAkB;QAAA,4DAAY;QACzC,+EAOC;QANC,sMAAkC;QAMnC,4DAAW;QACd,4DAAiB;QAEjB,0EAAiB;QACf,2EAAsB;QAEpB,qFAA+C;QAC7C,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,6EAME;QALA,gMAA+B;QADjC,4DAME;QACJ,4DAAiB;QACnB,4DAAM;QACN,2EAAsB;QAEpB,qFAA+C;QAC7C,6EAAW;QAAA,8EAAkB;QAAA,4DAAY;QACzC,6EAME;QALA,yMAAwC;QAD1C,4DAME;QACJ,4DAAiB;QACnB,4DAAM;QACR,4DAAM;QAIN,wFAKC;QAHC,yMAA6B;QAI7B,4EACF;QAAA,4DAAmB;QAEnB,iEAAM;QAEN,qFAAoD;QAClD,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,kFAA0D;QAA9B,mMAA6B;QACvD,4HAEa;QACf,4DAAa;QACf,4DAAiB;QAEjB,2EAAmC;QACjC,8EAAwD;QAAA,+DAAG;QAAA,4DAAS;QACtE,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAW;;QA3F0B,2DAA+B;QAA/B,0FAA+B;QAC5B,0DAAS;QAAT,+EAAS;QASnC,0DAA4B;QAA5B,uFAA4B;QAc5B,0DAAkC;QAAlC,6FAAkC;QAe9B,0DAA+B;QAA/B,0FAA+B;QAa/B,0DAAwC;QAAxC,mGAAwC;QAc9C,0DAA6B;QAA7B,wFAA6B;QAWD,0DAA6B;QAA7B,wFAA6B;QAC7B,0DAAa;QAAb,mFAAa;;;;;;;;;;;;;;ACxFrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAM8B;;;AAMvB,MAAM,eAAe;IAC1B,YAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;IAAG,CAAC;IAE3C,SAAS,CACP,GAAqB,EACrB,IAAiB;QAEjB,0CAA0C;QAC1C,IAAI,OAAO,GAAG,GAAG,CAAC;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAElC,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE,EAAE,aAAa,EAAE,UAAU,KAAK,EAAE,EAAE;aACjD,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;8EAlBU,eAAe;kGAAf,eAAe,WAAf,eAAe;AAqBrB,MAAM,wBAAwB,GAAG;IACtC;QACE,OAAO,EAAE,sEAAiB;QAC1B,QAAQ,EAAE,eAAe;QACzB,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;;;;;;;;;;;;;ACpCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;AAOxB,MAAM,iBAAiB;IAS5B,YAAoB,WAAwB,EAAS,KAAkB;QAAnD,gBAAW,GAAX,WAAW,CAAa;QAAS,UAAK,GAAL,KAAK,CAAa;QAPhE,aAAQ,GAAG;YAChB,cAAc,EAAE,EAAE;YAClB,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;SACV,CAAC;IAEyE,CAAC;IAE5E,QAAQ;IACR,CAAC;IAEH,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAE5C,CAAC;IACD,MAAM,CAAC,IAAI;QACT,OAAO,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAC/C,CAAC,IAAS,EAAE,EAAE;YACZ,SAAS;YACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,mBAAmB;YACnB,kDAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,aAAa,GAAG,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QACxE,CAAC,CACJ;IAAA,CAAC;;kFA3BW,iBAAiB;iGAAjB,iBAAiB;QCV9B,2EAAU;QACN,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QAErB,mFAAkB;QAChB,yEAA+B;QAC7B,0EAAgC;QAA1B,6IAAY,gBAAY,IAAC;QAC/B,yEAAiB;QACf,yEAAsB;QAElB,oFAAkD;QAChD,4EAAW;QAAA,2EAAe;QAAA,4DAAY;QAEtC,4EASE;QAJA,uMAAqC,qFAC7B,+BAA2B,IADE;QALvC,4DASE;QACJ,4DAAiB;QACnB,4DAAM;QACR,0EAAsB;QAClB,qFAAkD;QAChD,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAEhC,4EAQE;QAHA,6LAA2B;QAL7B,4DAQE;QACJ,4DAAiB;QACrB,4DAAM;QACN,0EAAsB;QAClB,qFAAkD;QAChD,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAE5B,4EAQE;QAHA,8LAA4B;QAL9B,4DAQE;QACJ,4DAAiB;QACrB,4DAAM;QACN,0EAAsB;QAClB,qFAAkD;QAChD,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAE5B,4EAQE;QAHA,8LAA4B;QAL9B,4DAQE;QACJ,4DAAiB;QACrB,4DAAM;QACN,0EAAwC;QACtC,8EAA0C;QAAA,+DAAG;QAAA,4DAAS;QACxD,4DAAM;QACR,4DAAM;QACN,4DAAO;QACT,4DAAM;QACR,4DAAmB;QACrB,4DAAW;;QA3DK,2DAAqC;QAArC,gGAAqC;QAgBrC,0DAA2B;QAA3B,sFAA2B;QAe3B,0DAA4B;QAA5B,uFAA4B;QAe5B,0DAA4B;QAA5B,uFAA4B;;;;;;;;;;;;;;AC/D9C;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACZnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;ICcT,yEAAsC;IAAA,oEAAG;IAAA,kEAAO;IAAA,4DAAI;IAAC,4DAAK;;;IAC1D,yEAAuD;IAAC,uDAAQ;IAAA,4DAAK;;;IAAb,0DAAQ;IAAR,oFAAQ;;;IAKhE,yEAAsC;IAAA,oEAAG;IAAA,+DAAI;IAAA,4DAAI;IAAA,4DAAK;;;IACtD,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAOzD,yEAAsC;IAAA,oEAAG;IAAA,sEAAW;IAAA,4DAAI;IAAA,4DAAK;;;IAC7D,yEAAuC;IAAC,uDAA2B;IAAA,4DAAK;;;IAAhC,0DAA2B;IAA3B,sGAA2B;;;IAGrE,oEAA4D;;;IAC5D,oEAAkE;;ADzB/E,MAAM,gBAAgB;IAM3B,YAAoB,MAAqB,EAAS,KAAiB;QAA/C,WAAM,GAAN,MAAM,CAAe;QAAS,UAAK,GAAL,KAAK,CAAY;QADrE,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACc,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAG3C,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CACvC,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;aAE/B;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,yBAAyB,EAAE,OAAO,CAAC,CAAC;QAC3D,CAAC,CACF,CAAC;IACJ,CAAC;;gFA7BU,gBAAgB;gGAAhB,gBAAgB;QCX7B,yEAAoC;QAChC,yEAA6B;QAC3B,yEAAiB;QACf,yEAAmC;QACjC,4EAAwG;QAAA,+DAAI;QAAA,4DAAS;QACvH,4DAAM;QACR,4DAAM;QACN,yEAA2C;QACrC,oEAA4B;QAC5B,yEAAsB;QAClB,2EAA2C;QAMvC,4EAAsC;QACpC,6GAA0D;QAC1D,6GAAqE;QACvE,qEAAe;QAGf,6EAAkC;QAChC,6GAAsD;QACtD,6GAA8D;QAChE,qEAAe;QAKf,6EAAmC;QACjC,6GAA6D;QAC7D,6GAAwE;QAC1E,qEAAe;QAEf,6GAA4D;QAC5D,6GAAkE;QACpE,4DAAQ;QAGd,4DAAM;QACN,qEAA4B;QAChC,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAlCuB,0DAAyB;QAAzB,sFAAyB;QAyBlB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBxE,MAAM,cAAc;IAQzB,YACU,KAAkB,EAClB,KAAmB,EACnB,MAAc,EACd,OAAqB;QAHrB,UAAK,GAAL,KAAK,CAAa;QAClB,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAc;QAX/B,SAAI,GAAG,IAAI;QACX,cAAS,GAAG;YACV,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IAQC,CAAC;IAEJ,QAAQ;QAEN,IAAG,IAAI,CAAC,OAAO,CAAC,UAAU,IAAK,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,SAAS,EAAC;YACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;SAC7C;QACD,IAAG,IAAI,CAAC,OAAO,CAAC,UAAU,IAAK,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,OAAO,EAAC;YACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;SAC1C;IACD,CAAC;IAED,UAAU;QAER,IACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE;YACjC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,EAC5B;YACA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE;gBAC9C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,OAAO;SACR;QAED,IACE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE;YACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,IAAI,EAC/B;YACA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE;gBAC9C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,OAAO;SACR;QAED,qCAAqC;QACrC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAChD,CAAC,MAAW,EAAE,EAAE;YAChB,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAE1B,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACpC,YAAY,CAAC,OAAO,CAAC,YAAY,EAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;gBAC/D,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;gBAClC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAExD;iBACG;gBACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE;oBAClD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;YACD,IAAG,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,OAAO,EAAC;gBAClE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;aAExC;iBACI,IAAG,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,SAAS,EAAC;gBACzE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;aAC5C;QACL,CAAC,CACF,CAAC;IACF,CAAC;;4EAxEY,cAAc;8FAAd,cAAc;QCb3B,yEAAgC;QAC9B,yEAAwB;QACtB,yEAAsB;QACpB,yEAAkC;QAChC,2EAAU;QACR,wEAAqC;QAAA,qEAAU;QAAA,4DAAK;QAGpD,0EAAgC;QAA1B,0IAAY,gBAAY,IAAC;QAG7B,oFAAwD;QACtD,4EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,4EAA6F;QAApD,4LAA6B;QAAtE,4DAA6F;QAC7F,+EAAoB;QAAA,2EAAe;QAAA,4DAAW;QAChD,4DAAiB;QAGjB,qFAAwD;QACtD,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,4EAAqI;QAA9F,+LAAgC;QAAvE,4DAAqI;QACrI,gFAA2C;QAAvB,iKAAsB;QAAC,wDAA0C;QAAA,4DAAW;QAClG,4DAAiB;QAGjB,2EAAmC;QACjC,8EAAwD;QACtD,mEACF;QAAA,4DAAS;QACT,8EAAuD;QACrD,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAzBiD,2DAA6B;QAA7B,wFAA6B;QAO/B,0DAAgC;QAAhC,2FAAgC;QAC5B,0DAA0C;QAA1C,2GAA0C;;;;;;;;;;;;;;ACnBnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACA;;;AAKxB,MAAM,YAAY;IAGvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF7B,uBAAkB,GAAG,IAAI,4CAAO,EAAW,CAAC;IAEZ,CAAC;IAExC,iCAAiC;IAC1B,cAAc;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,+CAAO,eAAe,CAAC,CAAC;IAClD,CAAC;IAED,gBAAgB;IAET,aAAa,CAAC,SAAc;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,+CAAO,iBAAiB,EAAE,SAAS,CAAC,CAAC;IAChE,CAAC;IAED,uCAAuC;IAChC,SAAS,CAAC,KAAK;QACpB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;IACd,CAAC;IAGD,mCAAmC;IAC5B,UAAU;QACf,IAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,IAAI,EAAE;YAC/D,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,2CAA2C;IACpC,MAAM;QACX,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,WAAW;IACJ,QAAQ;QACb,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,gBAAgB;IACT,OAAO,CAAC,IAAI;QACjB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,SAAS;IACF,OAAO;QACZ,IAAI,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,eAAe;IAER,WAAW;QAChB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACvC,CAAC;;wEAlEU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;;;;ICCzB,gFAA0C;IACxC,8EAAwB;IAAA,mEAAQ;IAAA,4DAAW;IAC3C,yEAAc;IAAA,uDAAiB;IAAA,4DAAM;IACrC,yEAAc;IAAA,uDAAgB;IAAA,4DAAM;IACpC,yEAA2B;IAC7B,4DAAgB;;;IAHA,0DAAiB;IAAjB,+EAAiB;IACjB,0DAAgB;IAAhB,8EAAgB;;ADG/B,MAAM,oBAAoB;IAI/B,YAAoB,QAAwB;QAAxB,aAAQ,GAAR,QAAQ,CAAgB;QAF5C,aAAQ,GAAG,EAAE,CAAC;IAEiC,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,SAAS,CAChC,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;aAE7B;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EAED,CAAC,KAAK,EAAE,EAAE;YACR,EAAE;YACF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,uBAAuB,EAAE,OAAO,CAAC,CAAC;QAC1D,CAAC,CACF,CAAC;IACJ,CAAC;;wFA1BU,oBAAoB;oGAApB,oBAAoB;QCTjC,2EAAU;QACN,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,2EAAU;QACR,oIAKgB;QAClB,4DAAW;QAEX,yEAAwC;QACtC,4EAA0E;QACxE,4EACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAW;;QAbsB,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;ACIvC,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMb,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;KACxB;;wEAFY,YAAY;4FAAZ,YAAY;;QCNzB,8EAMiB;QAIf,iFAAgD;QAAnC,qSAAiB,YAAgB,IAAC;QAAC,4DAAc;QAC9D,wFAAuB;QACvB,uFAAsB;QACpB,gFAA6C;QAAjC,kSAAgB,WAAe,IAAC;QAAC,4DAAa;QAC5D,4DAAc;QAKZ,uEAAM;QACJ,2EAA+B;QACjC,4DAAO;QAEX,4DAAwB;;;;;;;;;;;;;;ACrBxB;AAAA;AAAA;AAAA;AAAA;AAA+B;;;AAKxB,MAAM,eAAe;IAC1B,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAG,CAAC;IAElC,kBAAkB,CAAC,GAAG;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,sBAAsB,GAAG,EAAE,CAAC,CAAC;IAC/D,CAAC;IAEM,yBAAyB,CAAC,GAAG;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,kBAAkB,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,cAAc;IACP,WAAW,CAAC,QAAQ;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,+CAAO,gBAAgB,EAAE,QAAQ,CAAC,CAAC;IAC/D,CAAC;IACD,iBAAiB;IACV,cAAc,CAAC,UAAU;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,+CAAO,aAAa,UAAU,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,WAAW;IACJ,QAAQ,CAAC,cAAc;QAC5B,iCAAiC;QACjC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,+CAAO,iBAAiB,EAAE,cAAc,CAAC,CAAC;IACtE,CAAC;;8EAxBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;AAOxB,MAAM,oBAAoB;IAM/B,YACU,SAA0B,EAC1B,MAAmB;QADnB,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAa;QAP7B,aAAQ,GAAG;YACT,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;SAChB,CAAC;IAKC,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEnB,UAAU;QACR,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,EAAE;YACnE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE;gBACxC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,OAAO;SACR;QAED,UAAU;QAEV,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACjD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;YAC/B,kDAAI,CAAC,IAAI,CAAC,YAAY,EAAE,+BAA+B,EAAE,SAAS,CAAC,CAAC;QACtE,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;QACpD,CAAC,CACF,CAAC;IACJ,CAAC;;wFAlCU,oBAAoB;oGAApB,oBAAoB;QCVjC,2EAAU;QACR,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QAEzB,mFAAkB;QAChB,yEAA+B;QAC7B,yEAAiB;QACf,yEAAkC;QAChC,0EAAgC;QAA1B,gJAAY,gBAAY,IAAC;QAC7B,oFAAkD;QAChD,4EAAW;QAAA,iEAAK;QAAA,4DAAY;QAE5B,4EAQE;QADA,iMAA4B;QAP9B,4DAQE;QACJ,4DAAiB;QAEjB,qFAAkD;QAChD,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAElC,+EAMC;QAFC,0MAAkC;QAEnC,4DAAW;QACd,4DAAiB;QAEjB,0EAAwC;QACtC,6EAA0C;QAAA,+DAAG;QAAA,4DAAS;QACxD,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAmB;QACrB,4DAAW;;QAxBK,2DAA4B;QAA5B,uFAA4B;QAW5B,0DAAkC;QAAlC,6FAAkC;;;;;;;;;;;;;;;;;;;;;;ACrB3C,MAAM,WAAW;IACtB,YAAoB,cAA4B,EAAS,OAAc;QAAnD,mBAAc,GAAd,cAAc,CAAc;QAAS,YAAO,GAAP,OAAO,CAAO;IAAE,CAAC;IAC1E,WAAW,CACT,KAA6B,EAC7B,KAA0B;QACxB,IAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,SAAS,EAAC;YAC7E,OAAO,IAAI,CAAC;SACb;aACG;YACF,IAAI,EAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,OAAO,KAAK,CAAC;SACd;IACL,CAAC;;sEAZU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ICNpB,2EAAuB;IACrB,qEAAI;IAAA,+EAAoB;IAAA,4DAAK;IAE7B,mFAAkB;IAChB,yEAA+B;IAC7B,yEAAuB;IACrB,yEAAmC;IACjC,oEAIE;IAEF,wEAAiB;IAAA,uDAAwC;IAAA,4DAAK;IAChE,4DAAM;IAEN,0EAAiB;IACf,0EAAmC;IAEjC,4EAAiC;IAC/B,sEAAI;IACF,sEAAI;IAAA,oEAAQ;IAAA,4DAAK;IACjB,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC9B,4DAAK;IACL,sEAAI;IACF,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAC5B,4DAAK;IACL,sEAAI;IACF,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IAC3B,4DAAK;IACL,sEAAI;IACF,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,sEAAI;IAAA,wDAAmC;IAAA,4DAAK;IAC9C,4DAAK;IACL,sEAAI;IACF,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,wDAA2C;IAAA,4DAAK;IACtD,4DAAK;IACP,4DAAQ;IACV,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAmB;IACnB,uFAAsC;IACpC,8EAA0C;IAAA,kEAAM;IAAA,4DAAS;IACzD,8EAA0C;IAAA,iEAAK;IAAA,4DAAS;IAC1D,4DAAmB;IACrB,4DAAW;;;IArCgB,0DAAwC;IAAxC,0HAAwC;IAS/C,0DAAmB;IAAnB,qFAAmB;IAInB,0DAAiB;IAAjB,4FAAiB;IAIjB,0DAAgB;IAAhB,kFAAgB;IAIhB,0DAAmC;IAAnC,qGAAmC;IAInC,0DAA2C;IAA3C,6GAA2C;;AC9BxD,MAAM,gBAAgB;IAE3B,YAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;QADvC,SAAI,GAAG,IAAI,CAAC;IAC8B,CAAC;IAE3C,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QACjC,yCAAyC;QACzC,qBAAqB;QACrB,wBAAwB;QACxB,OAAO;QACP,iBAAiB;QACjB,sBAAsB;QACtB,MAAM;QACN,KAAK;IACP,CAAC;;gFAdU,gBAAgB;gGAAhB,gBAAgB;QDR7B,uHAkDW;;QAlDA,0EAAU;;;;;;;;;;;;;;AECrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACgC;AACpB;AACY;AACA;AACL;AACH;AACN;AACS;AACrB;AACW;AACQ;AACJ;AACL;AACM;AACN;AACgB;AACU;AACa;AACzB;AACd;AACoB;AACA;AACuB;AACT;AACA;AACZ;AACP;AACX;AAC2B;AACuB;AACpB;AAC5B;AACN;AAEkC;AACV;AACU;AACrB;AACU;AACL;AACiB;AAC7B;AACI;AACiC;AACR;AACI;AACQ;AAC/C;AAC8B;AACJ;AAEpB;AACqC;AACzB;AACS;;;AAsE3E,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FADb,CAAC,oFAAwB,EAAC,EAAC,OAAO,EAAE,iEAAgB,EAAE,QAAQ,EAAE,qEAAoB,EAAC,CAAC,YA/BxF;YAEP,uEAAa;YACb,iFAAmB;YACnB,2EAAgB;YAChB,oEAAgB;YAChB,4FAAuB;YACvB,wEAAe;YACf,sEAAc;YACd,gFAAkB;YAClB,2DAAW;YACX,sEAAgB;YAChB,8EAAiB;YACjB,qEAAa;YACb,2EAAgB;YAChB,uEAAc;YACd,qEAAa;YACb,qEAAa;YACb,oFAAoB;YACpB,yEAAe;YACf,2EAAc;YACd,4FAAwB;YACxB,gEAAiB;YACjB,sEAAc;YACd,uEAAc;YACd,2EAAmB;YAEnB,oEAAqB,CAAC,OAAO,CAAC;gBAC5B,cAAc,EAAE,IAAI;aACrB,CAAC;SACH;oIAIU,SAAS,mBAlElB,2DAAY;QACZ,mFAAe;QACf,mFAAe;QACf,8EAAe;QACf,2EAAc;QACd,yEAAa;QACb,8FAAkB;QAClB,2GAAsB;QACtB,kFAAgB;QAChB,wFAAgB;QAChB,wFAAgB;QAChB,+GAAuB;QACvB,sGAAoB;QACpB,sGAAoB;QACpB,0FAAgB;QAChB,mGAAmB;QACnB,0HAA0B;QAC1B,sGAAoB;QACpB,uFAAW;QACX,4FAAiB;QACjB,sGAAqB;QACrB,iFAAc;QACd,uGAAiB;QACjB,+GAAmB;QACnB,uGAAiB;QACjB,2GAAkB;QAClB,mHAAoB;QACpB,kGAAgB;QAChB,8FAAgB;QAChB,+GAAmB;QACnB,+FAAgB,aAIhB,uEAAa;QACb,iFAAmB;QACnB,2EAAgB;QAChB,oEAAgB;QAChB,4FAAuB;QACvB,wEAAe;QACf,sEAAc;QACd,gFAAkB;QAClB,2DAAW;QACX,sEAAgB;QAChB,8EAAiB;QACjB,qEAAa;QACb,2EAAgB;QAChB,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,oFAAoB;QACpB,yEAAe;QACf,2EAAc;QACd,4FAAwB;QACxB,gEAAiB;QACjB,sEAAc;QACd,uEAAc;QACd,2EAAmB;;;;;;;;;;;;;;;;;;;ACjHhB,MAAM,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FALU,sBAAsB;sGAAtB,sBAAsB;QCPnC,yEAA+B;QAC7B,yEAA6B;QAC3B,yEAAiB;QACf,oEACM;QAEN,yEAAuB;QACrB,2EAA+B;QACjC,4DAAM;QACN,oEACM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;ACNC,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEAAyD;QACrD,yEAA6B;QACzB,yEAAiB;QACjB,yEAAsB;QACpB,8EAAuB;QACrB,kFAAiB;QACf,yEAAkD;QAAA,2EAAU;QAAA,qEAAU;QAAA,4DAAW;QAAA,4DAAM;QACvF,iFAAgB;QACjB,yEACC;QAAA,4DAAiB;QACnB,4DAAkB;QAClB,oFAAkB;QAChB,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACZ,4DAAmB;QAEjB,6EAAmC;QAAA,gEAAI;QAAA,4DAAS;QAChD,6EAIC;QACC,mEACF;QAAA,4DAAS;QAGb,4DAAW;QACb,4DAAM;QACN,0EAAsB;QACpB,+EAAuB;QACrB,mFAAiB;QACf,0EAAkD;QAAA,4EAAU;QAAA,sEAAU;QAAA,4DAAW;QAAA,4DAAM;QACvF,kFAAgB;QACjB,wEACC;QAAA,4DAAiB;QACnB,4DAAkB;QAClB,oFAAkB;QAChB,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACZ,4DAAmB;QAEjB,6EAAmC;QAAA,gEAAI;QAAA,4DAAS;QAChD,6EAIC;QACC,mEACF;QAAA,4DAAS;QAGb,4DAAW;QACb,4DAAM;QACN,0EAAsB;QACpB,+EAAuB;QACrB,mFAAiB;QACf,0EAAkD;QAAA,4EAAU;QAAA,sEAAU;QAAA,4DAAW;QAAA,4DAAM;QACvF,kFAAgB;QACjB,oEACC;QAAA,4DAAiB;QACnB,4DAAkB;QAClB,oFAAkB;QAChB,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACZ,4DAAmB;QAEjB,6EAAmC;QAAA,gEAAI;QAAA,4DAAS;QAChD,6EAIC;QACC,mEACF;QAAA,4DAAS;QAGb,4DAAW;QACb,4DAAM;QAGd,4DAAM;QACN,0EAAiB;QACf,0EAAsB;QACpB,+EAAuB;QACrB,mFAAiB;QACf,0EAAkD;QAAA,4EAAU;QAAA,sEAAU;QAAA,4DAAW;QAAA,4DAAM;QACvF,kFAAgB;QACjB,kEACC;QAAA,4DAAiB;QACnB,4DAAkB;QAClB,oFAAkB;QAChB,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACZ,4DAAmB;QAEjB,6EAAmC;QAAA,gEAAI;QAAA,4DAAS;QAChD,6EAIC;QACC,mEACF;QAAA,4DAAS;QAGb,4DAAW;QACb,4DAAM;QACN,0EAAsB;QACpB,+EAAuB;QACrB,mFAAiB;QACf,0EAAkD;QAAA,4EAAU;QAAA,sEAAU;QAAA,4DAAW;QAAA,4DAAM;QACvF,kFAAgB;QACjB,mEACC;QAAA,4DAAiB;QACnB,4DAAkB;QAClB,oFAAkB;QAChB,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACZ,4DAAmB;QAEjB,6EAAmC;QAAA,gEAAI;QAAA,4DAAS;QAChD,6EAIC;QACC,mEACF;QAAA,4DAAS;QAGb,4DAAW;QACb,4DAAM;QACN,0EAAsB;QACpB,+EAAuB;QACrB,mFAAiB;QACf,0EAAkD;QAAA,4EAAU;QAAA,sEAAU;QAAA,4DAAW;QAAA,4DAAM;QACvF,kFAAgB;QACjB,wEACC;QAAA,4DAAiB;QACnB,4DAAkB;QAClB,oFAAkB;QAChB,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACZ,4DAAmB;QAEjB,6EAAmC;QAAA,gEAAI;QAAA,4DAAS;QAChD,6EAIC;QACC,mEACF;QAAA,4DAAS;QAGb,4DAAW;QACb,4DAAM;QAGR,4DAAM;QACA,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;AC3JV;AAAA;AAAA;AAAA;AAAA;AAA8D;AAE/B;;;AAKxB,MAAM,eAAe;IAC1B,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAG,CAAC;IACzC,yBAAyB;IAClB,UAAU,CAAC,OAAO;QACvB,IAAI,SAAS,GAAG,IAAI,gEAAW,CAAC;YAC9B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,SAAS,GAAG,OAAO;SACtC,CAAC,CAAC;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,YAAY,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IAEtE,CAAC;IAED,kBAAkB;IACX,WAAW,CAAC,QAAQ;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,+CAAO,gBAAgB,EAAE,QAAQ,CAAC,CAAC;IAC/D,CAAC;;8EAfU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;ICK/B,yEAAmD;IACnD,8EAAkC;IAEhC,kFAAiB;IACf,iFAAgB;IAChB,uDACA;IAAA,4DAAiB;IACnB,4DAAkB;IAClB,mFAAkB;IAChB,uDACF;IAAA,4DAAmB;IACnB,kFAAiB;IAEf,4EAIC;IAHD,wUAA2B;IAIzB,mEACF;IAAA,4DAAS;IACX,4DAAkB;IACpB,4DAAW;IAIX,4DAAM;;;IApBF,0DACA;IADA,0FACA;IAGA,0DACF;IADE,yFACF;;ADRK,MAAM,uBAAuB;IAGlC,YAAoB,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;QAF9C,eAAU,GAAG,EAAE,CAAC;IAEiC,CAAC;IAElD,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CACrE,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;aAE/B;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EAED,CAAC,KAAK,EAAE,EAAE;YACR,EAAE;YACF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,uBAAuB,EAAE,OAAO,CAAC,CAAC;QAC1D,CAAC,CACF,CAAC;IACJ,CAAC;;8FAzBU,uBAAuB;uGAAvB,uBAAuB;QCRpC,yEAAwC;QACtC,4EAA2E;QACzE,6EACF;QAAA,4DAAS;QACX,4DAAM;QACN,yEAAsB;QACtB,oHAyBM;QACN,4DAAM;;QA1B8B,0DAAa;QAAb,mFAAa;;;;;;;;;;;;;;ACLjD;AAAA;AAAA;AAAA;AAAA;AAA+B;;;AAKxB,MAAM,YAAY;IACvB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAG,CAAC;IACzC,yBAAyB;IAClB,MAAM;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED,kBAAkB;IACX,QAAQ,CAAC,KAAK;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,+CAAO,aAAa,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;;wEAVU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;;ACGb,MAAM,UAAU;IAErB,YAAoB,cAA4B,EAAS,OAAc;QAAnD,mBAAc,GAAd,cAAc,CAAc;QAAS,YAAO,GAAP,OAAO,CAAO;IAAE,CAAC;IAC1E,WAAW,CACT,KAA6B,EAC7B,KAA0B;QACxB,IAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,OAAO,EAAC;YAC3E,OAAO,IAAI,CAAC;SACb;aACG;YACH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;SACd;IAEL,CAAC;;oEAdU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;;;;;;;;;;;;ICKtE,uEAKC;IAFC,gUAAyB;IAGzB,8EAAwB;IAAA,qEAAU;IAAA,4DAAW;IAAC,uDAClD;IAAA,4DAAI;;;IANA,wGAA4C;IAKE,0DAClD;IADkD,2FAClD;;;;IAZA,kFAAmD;IAEjD,uEAA0E;IAA1B,2TAAyB;IACvE,8EAAwB;IAAA,mEAAQ;IAAA,4DAAW;IAAC,wEAC9C;IAAA,4DAAI;IACJ,sHAOE;IACJ,4DAAe;;;IAJG,0DAAa;IAAb,sFAAa;;;;IAM5B,kFAAmD;IAC1C,uEAAuE;IAA1B,2TAAyB;IAChE,8EAAwB;IAAA,+DAAI;IAAA,4DAAW;IAAC,iEAC9C;IAAA,4DAAI;IACA,uEAAuE;IAA1B,6TAAyB;IACpE,8EAAwB;IAAA,yEAAc;IAAA,4DAAW;IAAC,oEACpD;IAAA,4DAAI;IACJ,uEAA0E;IAA1B,6TAAyB;IACvE,+EAAwB;IAAA,gEAAI;IAAA,4DAAW;IAAC,wEAC1C;IAAA,4DAAI;IACJ,wEAAqE;IAA1B,8TAAyB;IAClE,+EAAwB;IAAA,iEAAK;IAAA,4DAAW;IAAC,mEAC3C;IAAA,4DAAI;IACJ,yEAAuE;IAA1B,8TAAyB;IACpE,+EAAwB;IAAA,yEAAa;IAAA,4DAAW;IAAC,qEACnD;IAAA,4DAAI;IACJ,yEAAuE;IAA1B,8TAAyB;IACpE,+EAAwB;IAAA,gEAAI;IAAA,4DAAW;IAAC,qEAC1C;IAAA,4DAAI;IACJ,yEAA2E;IAA1B,8TAAyB;IACxE,+EAAwB;IAAA,+DAAG;IAAA,4DAAW;IAAC,yEACzC;IAAA,4DAAI;IAElB,4DAAe;;AD1BV,MAAM,eAAe;IAU1B,YAAmB,KAAmB,EAAU,MAAc,EAAS,IAAqB,EAAU,MAAmB,EAAS,OAAqB;QAApI,UAAK,GAAL,KAAK,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAa;QAAS,YAAO,GAAP,OAAO,CAAc;QATvJ,SAAI,GAAG,IAAI,CAAC;QAIF,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;IAK8G,CAAC;IAH1J,aAAa;QACZ,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAGC,QAAQ;QAGL,IAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAE,IAAI,EAAC;YAClC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAChE,CAAC,MAAW,EAAE,EAAE;gBACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;oBAC1B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;iBAG/B;qBACG;oBACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBAElC;YAEH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAyC,EAAE,EAAE,EAAE;oBAC9D,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;YACL,CAAC,CACF,CAAC;SACF;IAGJ,CAAC;IAGD,KAAK;QACH,OAAO,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,SAAS,CAAC;IAClF,CAAC;IACD,KAAK;QACH,OAAO,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,OAAO,CAAC;IAChF,CAAC;;8EA9CU,eAAe;+FAAf,eAAe;QCZ5B,6HAae;QAEZ,8HAuBc;;QAtCmB,6EAAa;QAeV,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICThD,4EAIC;IACC,8EAAwB;IAAA,+DAAI;IAAA,4DAAW;IAAC,uDAC1C;IAAA,4DAAS;;;IALP,wGAA4C;IAIJ,0DAC1C;IAD0C,0FAC1C;;ACJG,MAAM,gBAAgB;IAE3B,YAAoB,IAAqB,EAAU,MAAmB;QAAlD,SAAI,GAAJ,IAAI,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAa;IAAG,CAAC;IAE1E,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAChE,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;aAE/B;iBACG;gBACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aAElC;QAEH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAyC,EAAE,EAAE,EAAE;gBAC9D,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IACJ,CAAC;;gFAvBU,gBAAgB;gGAAhB,gBAAgB;QDT7B,8EAAoC;QAClC,kFAAiB;QACf,yEAAmB;QAAA,+EAAoB;QAAA,4DAAM;QAE7C,4EAAqD;QACnD,8EAAwB;QAAA,+DAAI;QAAA,4DAAW;QAAC,wEAC1C;QAAA,4DAAS;QACT,kHAMS;QACX,4DAAkB;QACpB,4DAAW;;QALS,0DAAa;QAAb,mFAAa;;;;;;;;;;;;;;AENjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;;;;;;;ICyEjB,iFAAyD;IACvD,uDACF;IAAA,4DAAa;;;IAF4B,2EAAe;IACtD,0DACF;IADE,sFACF;;;;IA1EN,0EAA2C;IAAxB,yTAAuB;IAExC,oFAA+C;IAC7C,4EAAW;IAAA,sEAAW;IAAA,4DAAY;IAClC,2EAOE;IANA,qVAAwB;IAD1B,4DAOE;IACJ,4DAAiB;IAIjB,oFAA+C;IAC7C,4EAAW;IAAA,6EAAkB;IAAA,4DAAY;IACzC,8EAOC;IANC,8VAA8B;IAM/B,4DAAW;IACd,4DAAiB;IAEjB,yEAAiB;IACf,0EAAsB;IAEpB,qFAA+C;IAC7C,6EAAW;IAAA,yEAAa;IAAA,4DAAY;IACpC,4EAME;IALA,yVAA2B;IAD7B,4DAME;IACJ,4DAAiB;IACnB,4DAAM;IACN,0EAAsB;IAEpB,qFAA+C;IAC7C,6EAAW;IAAA,8EAAkB;IAAA,4DAAY;IACzC,6EAME;IALA,kWAAoC;IADtC,4DAME;IACJ,4DAAiB;IACnB,4DAAM;IACR,4DAAM;IAIN,wFAIC;IAFC,kWAAyB;IAGzB,4EACF;IAAA,4DAAmB;IAEnB,iEAAM;IAEN,sFAAoD;IAClD,6EAAW;IAAA,sEAAU;IAAA,4DAAY;IACjC,kFAA4D;IAAhC,oWAA+B;IACzD,uIAEa;IACf,4DAAa;IACf,4DAAiB;IAEjB,2EAAmC;IACjC,8EAAwD;IACtD,oEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAO;;;IA9ED,0DAAwB;IAAxB,sFAAwB;IAcxB,0DAA8B;IAA9B,4FAA8B;IAe1B,0DAA2B;IAA3B,yFAA2B;IAa3B,0DAAoC;IAApC,kGAAoC;IAc1C,0DAAyB;IAAzB,uFAAyB;IAUG,0DAA+B;IAA/B,6FAA+B;IAC/B,0DAAa;IAAb,sFAAa;;ADlE9C,MAAM,mBAAmB;IAC9B,YACU,MAAsB,EACtB,KAAkB,EAClB,IAAqB,EACrB,OAAe;QAHf,WAAM,GAAN,MAAM,CAAgB;QACtB,UAAK,GAAL,KAAK,CAAa;QAClB,SAAI,GAAJ,IAAI,CAAiB;QACrB,YAAO,GAAP,OAAO,CAAQ;QAGzB,QAAG,GAAG,CAAC,CAAC;IAFL,CAAC;IAMJ,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3C,mBAAmB;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CACpC,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAChE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACvC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oBAAoB;IACb,UAAU;QACf,YAAY;QAEZ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACxC,CAAC,IAAI,EAAE,EAAE;YACP,kDAAI,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC5D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAE,wBAAwB,EAAE,OAAO,CAAC,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;sFAlDU,mBAAmB;mGAAnB,mBAAmB;QCXhC,2EAAU;QACR,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QACzB,yEAAuB;QACrB,yEAAiB;QACf,yEAAkC;QAChC,kHAmFO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAW;;QAvFI,0DAAU;QAAV,0EAAU;;;;;;;;;;;;;;ACFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;;;AAOxB,MAAM,iBAAiB;IAQ5B,YACU,MAAoB,EACpB,MAAmB;QADnB,WAAM,GAAN,MAAM,CAAc;QACpB,WAAM,GAAN,MAAM,CAAa;QAR7B,UAAK,GAAG;YACN,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;YACf,KAAK,EAAC,EAAE;SACT,CAAC;IAKC,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEnB,UAAU;QACR,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,EAAE;YAC7D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE;gBACxC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,OAAO;SACR;QAED,UAAU;QAEV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACxC,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;YAC5B,kDAAI,CAAC,IAAI,CAAC,YAAY,EAAE,4BAA4B,EAAE,SAAS,CAAC,CAAC;QACnE,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;QACpD,CAAC,CACF,CAAC;IACJ,CAAC;;kFApCU,iBAAiB;iGAAjB,iBAAiB;QCV9B,2EAAU;QACN,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QAEtB,mFAAkB;QAChB,yEAA+B;QAC7B,yEAAiB;QACf,yEAAkC;QAChC,0EAAgC;QAA1B,6IAAY,gBAAY,IAAC;QAC7B,oFAAkD;QAChD,4EAAW;QAAA,iEAAK;QAAA,4DAAY;QAE5B,4EAQE;QADA,2LAAyB;QAP3B,4DAQE;QACJ,4DAAiB;QACjB,qFAAkD;QAChD,iFAAgE;QAApD,gMAAyB;QAClC,iFAAyB;QAAA,+DAAG;QAAA,4DAAa;QACzC,iFAAyB;QAAA,+DAAG;QAAA,4DAAa;QACzC,iFAAyB;QAAA,+DAAG;QAAA,4DAAa;QACzC,iFAAyB;QAAA,+DAAG;QAAA,4DAAa;QACzC,iFAAyB;QAAA,+DAAG;QAAA,4DAAa;QACzC,iFAAyB;QAAA,+DAAG;QAAA,4DAAa;QACzC,iFAAyB;QAAA,+DAAG;QAAA,4DAAa;QAC5C,4DAAa;QACf,4DAAiB;QAEjB,qFAAkD;QAChD,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAElC,+EAMC;QAFC,oMAA+B;QAEhC,4DAAW;QACd,4DAAiB;QAEjB,0EAAwC;QACtC,8EAA0C;QAAA,+DAAG;QAAA,4DAAS;QACxD,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAmB;QACrB,4DAAW;;QAnCK,2DAAyB;QAAzB,oFAAyB;QAIf,0DAAyB;QAAzB,oFAAyB;QACrB,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QAWzB,0DAA+B;QAA/B,0FAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9B1C,MAAM,mBAAmB;IAK5B,YAAoB,MAAa,EAAS,KAAgB,EAAS,KAAiB;QAAhE,WAAM,GAAN,MAAM,CAAO;QAAS,UAAK,GAAL,KAAK,CAAW;QAAS,UAAK,GAAL,KAAK,CAAY;IAAI,CAAC,CAAC,sBAAsB;IAEhH,wEAAwE;IACxE,uBAAuB;IAEvB,QAAQ;IAEV,CAAC;IAED,UAAU,CAAC,KAAU;QACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,UAAU;QACR,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE;QAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CACvC,CAAC,IAAI,EAAC,EAAE;YACN,KAAK,CAAC,2BAA2B,CAAC,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,EACD,CAAC,KAAK,EAAC,EAAE;YACP,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAEhC,CAAC,CAAC;IACN,CAAC;;sFAjCU,mBAAmB;mGAAnB,mBAAmB;QCThC,2EAAU;QACN,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QAEzB,mFAAkB;QAChB,yEAA+B;QAC7B,yEAAiB;QACf,yEAAkC;QAChC,2EAAuG;QAA/F,kJAAU,sBAAkB,IAAC;QAArC,4DAAuG;QACzG,4EAAiE;QAAvB,2IAAS,gBAAY,IAAC;QAAC,iEAAM;QAAA,4DAAS;QAChF,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAmB;QACrB,4DAAW;;;;;;;;;;;;;;ACdb;AAAA,IAAI,OAAO,GAAG,sBAAsB,CAAC;AACtB,sEAAO,EAAC;;;;;;;;;;;;;ACEvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;;;;;;ICsBjB,+EAAmD;IAAA,wFAA6B;IAAA,4DAAW;;;IAC3F,+EAAqD;IAAA,oFAAyB;IAAA,4DAAW;;;IA6FzF,6EAAqG;IACnG,qEACF;IAAA,4DAAS;;;IACT,6EAA+E;IAC7E,qEACF;IAAA,4DAAS;;ADjHhB,MAAM,eAAe;IAC1B,YAAoB,WAAwB,EAAU,KAAkB;QAApD,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAa;QAEjE,SAAI,GAAG;YACZ,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IAVyE,CAAC;IAY5E,QAAQ,KAAU,CAAC;IAEnB,MAAM,CAAC,IAAI;QACT,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAErB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAC,QAAQ,EAAI,IAAI,EAAC,CAAC,CAAC,SAAS,CAC7D,CAAC,IAAS,EAAE,EAAE;gBAChB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YAEf,CAAC,CACJ;SAAC;IACA,CAAC;IAEH,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YACpD,gCAAgC;YAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAE;gBACnD,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,OAAO;SACR;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YAC1D,gCAAgC;YAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE;gBAC9C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,OAAO;SACR;QAED,UAAU;QAEV,sBAAsB;QACtB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3C,CAAC,IAAS,EAAE,EAAE;YACZ,SAAS;YACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,mBAAmB;YACnB,kDAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,aAAa,GAAG,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QACxE,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO;YACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,iCAAiC;YACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE;gBACpC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IACJ,CAAC;;8EAhEU,eAAe;+FAAf,eAAe;QCX5B,yEAA+B;QAC7B,yEAAuB;QACrB,yEAAiB;QACf,yEAAkC;QAChC,2EAAU;QAGR,wEAAqC;QAAA,oFAAyB;QAAA,4DAAK;QAInE,0EAAgC;QAA1B,2IAAY,gBAAY,IAAC;QAE7B,oFAAwD;QACtD,4EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,4EASE;QAPA,wLAAwB,mFAIhB,+BAA2B,IAJX;QAF1B,4DASE;QACF,uHAA2F;QAC3F,uHAAyF;QAC3F,4DAAiB;QAGhB,qFAAwD;QACvD,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,6EAME;QAJA,uLAAuB;QAFzB,4DAME;QACJ,4DAAiB;QAGjB,sFAAwD;QACtD,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC1B,kFAES;QAFG,6LAAwB;QAGlC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC5C,4DAAa;QACjB,4DAAiB;QAIjB,sFAA+D;QAC7D,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,6EAME;QAJA,yLAAyB;QAF3B,4DAME;QACJ,4DAAiB;QACjB,8EAAoH;QAClH,4EAAU;QAAA,+DAAG;QAAA,4DAAW;QAC1B,4DAAS;QAGT,qFAAwD;QACtD,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,6EAOE;QALA,wLAAwB;QAF1B,4DAOE;QACJ,4DAAiB;QAGjB,qFAAwD;QACtD,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,6EAOE;QALA,wLAAwB;QAF1B,4DAOE;QACJ,4DAAiB;QAGjB,qFAAwD;QACtD,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,6EAOE;QALA,2LAA2B;QAF7B,4DAOE;QACJ,4DAAiB;QAGjB,2EAAoC;QAClC,oHAES;QACT,oHAES;QAEX,4DAAM;QACR,4DAAO;QACT,4DAAW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAnHU,2DAAwB;QAAxB,mFAAwB;QAQf,0DAAkB;QAAlB,oFAAkB;QAClB,0DAAkB;QAAlB,oFAAkB;QAQ3B,0DAAuB;QAAvB,kFAAuB;QAUX,0DAAwB;QAAxB,mFAAwB;QAGtB,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAW;QAAX,oEAAW;QACX,0DAAY;QAAZ,qEAAY;QACZ,0DAAY;QAAZ,qEAAY;QACZ,0DAAY;QAAZ,qEAAY;QAU1B,0DAAyB;QAAzB,oFAAyB;QAezB,0DAAwB;QAAxB,mFAAwB;QAaxB,0DAAwB;QAAxB,mFAAwB;QAaxB,0DAA2B;QAA3B,sFAA2B;QAUpB,0DAAkB;QAAlB,oFAAkB;QAGlB,0DAAkB;QAAlB,oFAAkB;;;;;;;;;;;;;;ACxHzC;AAAA;AAAA;AAAA;AAAA;AAA+B;;;AAKxB,MAAM,WAAW;IACtB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAG,CAAC;IAElC,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED,UAAU;IACH,OAAO,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,+CAAO,YAAY,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,aAAa;IACN,UAAU,CAAC,GAAG;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,+CAAO,SAAS,GAAG,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,qBAAqB;IAEd,OAAO,CAAC,GAAG;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,SAAS,GAAG,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,aAAa;IACN,UAAU,CAAC,IAAI;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,QAAQ,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,yBAAyB;IAClB,oBAAoB,CAAC,GAAG;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,kBAAkB,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;IACD,oBAAoB;IACb,gBAAgB,CAAC,MAAM;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,gBAAgB,MAAM,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,gCAAgC;IACzB,0BAA0B,CAAC,GAAG;QACnC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,yBAAyB,GAAG,EAAE,CAAC,CAAC;IAClE,CAAC;IACM,2BAA2B,CAAC,IAAI;QACrC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,+CAAO,0BAA0B,EAAC,IAAI,CAAC,CAAC;IACpE,CAAC;IACM,UAAU,CAAC,GAAG;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,+CAAO,uBAAuB,GAAG,EAAE,CAAC,CAAC;IAChE,CAAC;;sEA9CU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;AAOxB,MAAM,mBAAmB;IAO9B,YACU,QAAwB,EACxB,MAAmB;QADnB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,WAAM,GAAN,MAAM,CAAa;QAP7B,YAAO,GAAG;YACR,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;SAChB,CAAC;IAKC,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEnB,UAAU;QACR,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE;YACjE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE;gBACxC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,OAAO;SACR;QAED,UAAU;QAEV,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;YAC9B,kDAAI,CAAC,IAAI,CAAC,YAAY,EAAE,8BAA8B,EAAE,SAAS,CAAC,CAAC;QACrE,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;QACpD,CAAC,CACF,CAAC;IACJ,CAAC;;sFAnCU,mBAAmB;mGAAnB,mBAAmB;QCVhC,2EAAU;QACN,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAExB,mFAAkB;QAChB,yEAA+B;QAC7B,yEAAiB;QACf,yEAAkC;QAChC,0EAAgC;QAA1B,+IAAY,gBAAY,IAAC;QAC7B,oFAAkD;QAChD,4EAAW;QAAA,iEAAK;QAAA,4DAAY;QAE5B,4EAQE;QADA,+LAA2B;QAP7B,4DAQE;QACJ,4DAAiB;QAEjB,qFAAkD;QAChD,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAElC,+EAMC;QAFC,wMAAiC;QAElC,4DAAW;QACd,4DAAiB;QAEjB,0EAAwC;QACtC,6EAA0C;QAAA,+DAAG;QAAA,4DAAS;QACxD,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAmB;QACrB,4DAAW;;QAxBK,2DAA2B;QAA3B,sFAA2B;QAW3B,0DAAiC;QAAjC,4FAAiC;;;;;;;;;;;;;;AC3BnD;AAAA;AAAA;AAAA;AAAA;AAA+B;;;AAKxB,MAAM,WAAW;IACtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,UAAU;IAEH,OAAO,CAAC,IAAS;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,+CAAO,QAAQ,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAEM,gBAAgB,CAAC,KAAS;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,+CAAO,QAAQ,EAAE,KAAK,CAAC;IACjD,CAAC;IACM,cAAc,CAAC,gBAAoB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,+CAAO,mBAAmB,EAAE,gBAAgB,CAAC;IACxE,CAAC;IACM,gBAAgB,CAAC,IAAQ;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,+CAAO,gBAAgB,EAAE,IAAI,CAAC;IACzD,CAAC;IACM,UAAU,CAAC,IAAQ;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,+CAAO,qBAAqB,EAAE,IAAI,CAAC;IAC9D,CAAC;;sEApBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;ACEb,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,yEAA+B;QAC7B,yEAA6B;QAC3B,yEAAiB;QACf,oEAEM;QAEN,yEAAsB;QACpB,2EAA+B;QACjC,4DAAM;QACN,oEAEM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;ACTN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;;;;ICkBvB,wEAAgC;IAC9B,yEAAiB;IACf,0EACF;IAAA,4DAAK;IACP,qEAAe;;;IAEf,+EAAoF;IAClF,uFAA2C;IACzC,oEAAG;IAAA,uDAAoB;IAAA,4DAAI;IAAC,mEAA+B;IAC3D,yEAA4B;IAC5B,0EAAsB;IACpB,yEAAsB;IACpB,wEAAO;IACL,4EAKA;IADA,sOAA2B;IAJ3B,4DAKA;IACA,wEAAM;IAAA,wDAAY;IAAA,4DAAO;IAC3B,4DAAQ;IAEV,4DAAM;IACN,0EAAsB;IACpB,yEAAO;IACL,6EAKA;IADA,uOAA2B;IAJ3B,4DAKA;IACA,wEAAM;IAAA,wDAAY;IAAA,4DAAO;IAC3B,4DAAQ;IACV,4DAAM;IACR,4DAAM;IAEL,2EAAqB;IACpB,0EAAsB;IACpB,yEAAO;IACL,6EAKA;IADA,uOAA2B;IAJ3B,4DAKA;IACA,wEAAM;IAAA,wDAAY;IAAA,4DAAO;IAC3B,4DAAQ;IACV,4DAAM;IACN,0EAAsB;IACpB,yEAAO;IACL,6EAKA;IADA,uOAA2B;IAJ3B,4DAKA;IACA,wEAAM;IAAA,wDAAY;IAAA,4DAAO;IAC3B,4DAAQ;IACV,4DAAM;IACR,4DAAM;IAER,4DAAmB;IACrB,4DAAW;;;;IAtDJ,0DAAoB;IAApB,2FAAoB;IAAQ,0DAAuB;IAAvB,iJAAuB;IAQhD,0DAAU;IAAV,sEAAU;IAGJ,0DAAY;IAAZ,0EAAY;IASlB,0DAAU;IAAV,sEAAU;IAGJ,0DAAY;IAAZ,0EAAY;IAWlB,0DAAU;IAAV,sEAAU;IAGJ,0DAAY;IAAZ,0EAAY;IAQlB,0DAAU;IAAV,sEAAU;IAGJ,0DAAY;IAAZ,0EAAY;;;;IAhFpC,yEAAiD;IAC/C,yEAA6B;IAC3B,yEAAiB;IACf,yEAAuB;IACrB,8EAAmC;IACjC,kFAAiB;IACf,iFAAgB;IAAC,qEAAS;IAAA,4DAAiB;IAC3C,oFAAmB;IACjB,oHAAwD;IAAA,qEAAG;IAAA,+DAAG;IAAA,4DAAI;IACpE,4DAAoB;IACtB,4DAAkB;IAClB,oFAAkB;IAChB,yEAAwB;IAAA,wDAAwB;IAAA,4DAAK;IACrD,6EAKe;IACjB,4DAAmB;IACrB,4DAAW;IACb,4DAAM;IACN,0EAAsB;IAEpB,oIAIe;IAEf,+HAwDW;IAEX,2EAA6C;IAC3C,8EAAiE;IAAzD,uTAAsB;IAC5B,yEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;IAER,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IArF8B,2DAAwB;IAAxB,0FAAwB;IAK9C,0DAAqD;IAArD,4HAAqD;IAO5C,0DAAe;IAAf,kFAAe;IAMN,0DAAc;IAAd,qFAAc;;;IAqE9C,yEAAgD;IAC9C,0EAAsB;IACpB,0EAAkC;IAChC,2EAAU;IACR,6EACkB;IAClB,sFAAsC;IACpC,qEAAI;IAAA,kGAAuC;IAAA,4DAAK;IAElD,4DAAmB;IACnB,sFAAsC;IACpC,6EAIC;IACC,kEACF;IAAA,4DAAS;IACX,4DAAmB;IACrB,4DAAW;IACb,4DAAM;IACR,4DAAM;IACR,4DAAM;;IARM,0DAAkC;IAAlC,2FAAkC;;ADpGvC,MAAM,cAAc;IAiBzB,YACU,UAA4B,EAC5B,MAAsB,EACtB,SAA0B,EAC1B,KAAkB;QAHlB,eAAU,GAAV,UAAU,CAAkB;QAC5B,WAAM,GAAN,MAAM,CAAgB;QACtB,cAAS,GAAT,SAAS,CAAiB;QAC1B,UAAK,GAAL,KAAK,CAAa;QApB5B,SAAI,GAAG,IAAI,CAAC;QAKZ,aAAQ,GAAG,CAAC,CAAC;QACb,mBAAc,GAAG,CAAC,CAAC;QACnB,cAAS,GAAG,CAAC,CAAC;QAEd,aAAQ,GAAG,KAAK,CAAC;QAGjB,WAAM,GAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IASnC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,EAAC,MAAM,EAAG,IAAI,CAAC,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC,SAAS,CACzF,CAAC,MAAU,EAAE,EAAE;YACb,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC5B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBACxD,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;aAEtE;QACH,CAAC,CACF,CAAC;QACF,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,8BAA8B;IAEhC,CAAC;IACD,aAAa;QACX,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAC1D,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC7B,+CAA+C;gBAC/C,IAAI,gBAAgB,GAAI,CAAC,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC,GAAC,EAAE;gBAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,gBAAgB,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAC,IAAI,CAAC,UAAU,CAAC,GAAC,IAAI,CAAC,CAAC;gBACjG,mCAAmC;gBACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;gBACxC,kCAAkC;gBAClC,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACzC,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EAED,CAAC,KAAK,EAAE,EAAE;YACR,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAE,oCAAoC,EAAE,OAAO,CAAC,CAAC;QACpE,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,EAAE;YAC9B,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,iCAAiC;YACxC,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,QAAQ;YAC3B,IAAI,EAAE,MAAM;SACb,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACZ,IAAI,CAAC,CAAC,WAAW,EAAE;gBACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QAER,IAAI,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE;YAC9B,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;gBACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,aAAa,CAAC,CAAC,CAAC,CAAC;aAClB;iBAAM;gBACL,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,gBAAgB;QACd,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;QACrC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;QAC9B,OAAO,GAAG,EAAE,UAAU,EAAE,MAAM,CAAC;IACjC,CAAC;IAED,QAAQ;QACN,aAAa;QACb,mCAAmC;QACnC,yCAAyC;QACzC,MAAM,WAAW,GAAG,EAAE;QACtB,MAAM,cAAc,GAAE,EAAE;QACxB,cAAc,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACvC,cAAc,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;QAC5C,MAAM,SAAS,GAAG,EAAE;QACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,KAAK;YACpC,IAAI,KAAK,CAAC,aAAa,CAAC,EACxB;gBACA,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;aACnD;YACD,gEAAgE;QAClE,CAAC,CAAC,CAAC;QACH,cAAc,CAAC,MAAM,CAAC,GAAG,SAAS;QAClC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,SAAS,CAC/C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;YAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;QACF,wBAAwB;QACxB,kCAAkC;QAClC,qCAAqC;QACrC,6BAA6B;QAC7B,wBAAwB;QACxB,iEAAiE;QACjE,oCAAoC;QACpC,MAAM;QACN,sCAAsC;QACtC,wBAAwB;QACxB,MAAM;QACN,MAAM;QACN,0DAA0D;QAC1D,6CAA6C;QAC7C,8CAA8C;QAC9C,+BAA+B;IACjC,CAAC;;4EAtJU,cAAc;8FAAd,cAAc;QCb3B,2GAiGM;QAEN,2GAsBM;;QAzH0B,+EAAe;QAmGf,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;AChG9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;;;ICG/B,yEAAgD;IAChD,8EAAkC;IAChC,kFAAiB;IACf,yEAAkD;IAAA,oEAAkJ;IAAA,4DAAM;IAC1M,iFAAgB;IACd,uDACF;IAAA,4DAAiB;IACjB,oFAAmB;IACjB,oEAAG;IAAA,uDAAiB;IAAA,4DAAI;IACxB,qEAAG;IAAA,wDAA4B;IAAA,4DAAI;IACrC,4DAAoB;IACtB,4DAAkB;IAClB,oFAAkB;IAChB,qEAAG;IAAA,wDAAmB;IAAA,4DAAI;IAC5B,4DAAmB;IACnB,mFAAiB;IACf,6EAIC;IACC,uEACF;IAAA,4DAAS;IAGT,6EAIC;IACC,oEACF;IAAA,4DAAS;IACT,6EAIC;IACC,mEACF;IAAA,4DAAS;IAET,6EAEc;IACZ,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC7B,4DAAS;IAET,8EAA+E;IAA1C,8VAA2B;IAC9D,4EAAU;IAAA,0EAAc;IAAA,4DAAW;IACrC,4DAAS;IACX,4DAAkB;IACpB,4DAAW;IAIX,4DAAM;;;IAjDA,0DACF;IADE,uHACF;IAEK,0DAAiB;IAAjB,+EAAiB;IACjB,0DAA4B;IAA5B,mGAA4B;IAI9B,0DAAmB;IAAnB,iFAAmB;IAIpB,0DAAgE;IAAhE,+HAAgE;IAShE,0DAAsC;IAAtC,kGAAsC;IAOtC,0DAA0C;IAA1C,sGAA0C;IAQ5C,0DAAsC;IAAtC,kGAAsC;;ADrCnC,MAAM,oBAAoB;IAI/B,YAAoB,KAAkB,EAAS,MAAoB;QAA/C,UAAK,GAAL,KAAK,CAAa;QAAS,WAAM,GAAN,MAAM,CAAc;QAHnE,YAAO,GAAG,EAAE,CAAC;QACb,WAAM,GAAG,EAAE,CAAC;IAE0D,CAAC;IAEvE,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,SAAS,CAC5B,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;aAE5B;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,yBAAyB,EAAE,OAAO,CAAC,CAAC;QAC3D,CAAC,CACF,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,CAC5B,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;aAE3B;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,yBAAyB,EAAE,OAAO,CAAC,CAAC;QAC3D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,EAAE;IACF,UAAU,CAAC,GAAG;QACZ,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,gBAAgB;YACvB,iBAAiB,EAAE,QAAQ;YAC3B,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,WAAW;gBAEX,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAClC,CAAC,IAAI,EAAE,EAAE;oBACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;oBAC9D,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;gBACnD,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;oBACR,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAE,wBAAwB,EAAE,OAAO,CAAC,CAAC;gBACxD,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;wFAjEU,oBAAoB;oGAApB,oBAAoB;QCVjC,yEAAwC;QACtC,4EAAuE;QACrE,yEACF;QAAA,4DAAS;QACX,4DAAM;QACN,yEAAiB;QACjB,iHAsDM;QACN,4DAAM;;QAvD8B,0DAAU;QAAV,gFAAU;;;;;;;;;;;;;;ACL9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACkC;AACC;AACD;AACZ;AACqB;AACR;AAET;AACK;AACY;AACA;AACJ;AACe;AACpB;AACa;AAC3B;AAEZ;AACM;AACH;AACuB;AACV;AACG;AACd;AAC0B;AACT;AACjC;AACE;;;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAc;QACzB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,+EAAe;QAC1B,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,4EAAc;QACzB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,6FAAkB;QAC7B,WAAW,EAAE,CAAC,iEAAU,CAAC;QACzB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,6FAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,kFAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,wFAAgB;aAC5B;YACD;gBAEE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,+GAAuB;aACnC;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,qGAAoB;aAChC;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,sGAAoB;aAEhC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,yFAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,kGAAmB;aAC/B;YACD;gBACE,IAAI,EAAE,4BAA4B;gBAClC,SAAS,EAAE,0HAA0B;aACtC;YACD;gBACE,IAAI,EAAE,0BAA0B;gBAChC,SAAS,EAAE,qGAAoB;aAChC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,sGAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,8GAAmB;aAC/B;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,sGAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,mHAAoB;aAChC;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,2GAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,8GAAmB;aAC/B;SACF;KACF;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,2GAAsB;QACjC,WAAW,EAAE,CAAC,mEAAW,CAAC;QAC1B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,4FAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,SAAS,EAAE,sGAAqB;aACjC;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,kGAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,+FAAgB;aAC5B;SACF;KACF;IACD;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,iFAAc;QACzB,WAAW,EAAE,CAAC,mEAAW,CAAC;KAC3B;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;gGAAhB,gBAAgB;oGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;oIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACpJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;;;;ICWzB,8EAAkE;IAChE,mFAAkB;IAChB,oEAAG;IACD,oEAAG;IAAC,uDACJ;IAAA,qEAAkD;IACpD,4DAAI;IAAA,4DAAI;IAER,yEAA6B;IAC3B,yEAAiB;IACf,yEAAsB;IACpB,oEAAG;IAAA,qEAAG;IAAA,8DAAE;IAAA,4DAAI;IAAC,wDAAW;IAAA,4DAAI;IAC9B,4DAAM;IACN,0EAAsB;IACpB,qEAAG;IAAA,qEAAG;IAAA,8DAAE;IAAA,4DAAI;IAAC,wDAAY;IAAA,4DAAI;IAC/B,4DAAM;IACR,4DAAM;IACN,0EAAiB;IACf,0EAAsB;IACpB,qEAAG;IAAA,qEAAG;IAAA,8DAAE;IAAA,4DAAI;IAAC,wDAAY;IAAA,4DAAI;IAC/B,4DAAM;IACN,0EAAsB;IACpB,qEAAG;IAAA,qEAAG;IAAA,8DAAE;IAAA,4DAAI;IAAC,wDAAY;IAAA,4DAAI;IAC/B,4DAAM;IACR,4DAAM;IACN,0EAA2B;IAC3B,wEAAgB;IAAA,qEAAG;IAAA,2EAAe;IAAA,4DAAI;IAAC,wDAAW;IAAA,4DAAI;IACxD,4DAAM;IACR,4DAAmB;IAEnB,mFAAiB;IACf,8EAAoE;IAAjD,iXAAmC;IACpD,oEACF;IAAA,4DAAS;IACT,8EAAmC;IAAA,kEAAM;IAAA,4DAAS;IACpD,4DAAkB;IACpB,4DAAW;;;;IAhCD,0DACJ;IADI,uFACJ;IAAmB,0DAAuB;IAAvB,iJAAuB;IAMzB,0DAAW;IAAX,oFAAW;IAGX,0DAAY;IAAZ,oFAAY;IAKZ,0DAAY;IAAZ,oFAAY;IAGZ,0DAAY;IAAZ,oFAAY;IAIU,0DAAW;IAAX,mFAAW;;AD7BvD,MAAM,0BAA0B;IAKrC,YACU,MAAsB,EACtB,SAA0B,EAC1B,KAAkB;QAFlB,WAAM,GAAN,MAAM,CAAgB;QACtB,cAAS,GAAT,SAAS,CAAiB;QAC1B,UAAK,GAAL,KAAK,CAAa;QAL5B,cAAS,GAAG,EAAE,CAAC;IAMZ,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CACnD,CAAC,MAAW,EAAE,EAAE;YACd,IAAG,MAAM,CAAC,MAAM,IAAE,SAAS,EAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;aAE9B;iBACG;gBACF,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC;aAE/C;QAEH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB;IAChB,cAAc,CAAC,GAAG;QAChB,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,MAAM;YACZ,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,QAAQ;YAC3B,KAAK,EAAE,8CAA8C;SACtD,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,QAAQ;gBACR,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,SAAS,CAC1C,CAAC,IAAI,EAAE,EAAE;oBACP,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE;wBACvC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;gBACjE,CAAC,EAED,CAAC,KAAK,EAAE,EAAE;oBACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,6BAA6B,EAAE,EAAE,EAAE;wBACjD,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;oGA3DU,0BAA0B;0GAA1B,0BAA0B;QCXvC,wEAAiB;QAAA,uDAAyB;QAAA,4DAAK;QAE/C,yEAA+B;QAC7B,yEAAiB;QACf,yEAAuB;QACrB,yEAAmC;QACjC,4EAIC;QACC,yEACF;QAAA,4DAAS;QACX,4DAAM;QAEN,iIAmCW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAM;;QArDW,0DAAyB;QAAzB,iGAAyB;QAShC,0DAA0D;QAA1D,2HAA0D;QAMtC,0DAAc;QAAd,kFAAc;;;;;;;;;;;;;;;;;;;;ACfG;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <mat-action-list>\r\n    <div mat-subheader>Menu</div>\r\n    <button routerLink=\"/admin\" mat-list-item>\r\n      <mat-icon mat-list-icon>home</mat-icon> Home\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/profile\">\r\n      <mat-icon mat-list-icon>account_circle</mat-icon> Profile\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/categories\">\r\n      <mat-icon mat-list-icon>list</mat-icon> Categories\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/level\">\r\n      <mat-icon mat-list-icon>waves</mat-icon> Level\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/subject\">\r\n      <mat-icon mat-list-icon>library_books</mat-icon> Subject\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/quizzes\">\r\n      <mat-icon mat-list-icon>quiz</mat-icon> Quizzes\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/upload-user\">\r\n      <mat-icon mat-list-icon>add</mat-icon> Upload User\r\n    </button>\r\n    <button mat-list-item routerLink=\"/admin/profile\">\r\n      <mat-icon mat-list-icon>logout</mat-icon> Logout\r\n    </button>\r\n    \r\n  </mat-action-list>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LevelService } from 'src/app/services/level.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-view-level',\r\n  templateUrl: './view-level.component.html',\r\n  styleUrls: ['./view-level.component.css']\r\n})\r\nexport class ViewLevelComponent implements OnInit {\r\n\r\n  levels = [];\r\n\r\n  constructor(private _level: LevelService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._level.levels().subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.levels = result.data;\r\n  \r\n          \r\n        }\r\n        else{\r\n         \r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n\r\n      (error) => {\r\n        //\r\n        console.log(error);\r\n        Swal.fire('Error !!', 'Error in loading data', 'error');\r\n      }\r\n    );\r\n  }\r\n}\r\n","\r\n  \r\n<div class=\"container text-center mt20\">\r\n  <button routerLink=\"/admin/add-level\" mat-raised-button color=\"primary\">\r\n    Add New Level\r\n  </button>\r\n</div>\r\n<div class=\"row mt20\">\r\n<div class=\"col-md-4\" *ngFor=\"let l of levels\">\r\n<mat-card class=\"mt10 mr20 ml20\" >\r\n  \r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      {{ l.level_title }}\r\n    </mat-card-title>\r\n    <mat-card-subtitle>\r\n      <b>Class: {{ l.level_class }}</b>\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    {{ l.level_desc }}\r\n  </mat-card-content>\r\n  <mat-card-action>\r\n  \r\n    <button\r\n    (click)=\"deleteQuiz(q.qId)\"\r\n      mat-flat-button\r\n      color=\"primary\"\r\n    >\r\n      Delete\r\n    </button>\r\n  </mat-card-action>\r\n</mat-card>\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuestionService } from 'src/app/services/question.service';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { SubjectService } from 'src/app/services/subject.service';\r\n\r\n@Component({\r\n  selector: 'app-add-question',\r\n  templateUrl: './add-question.component.html',\r\n  styleUrls: ['./add-question.component.css'],\r\n})\r\nexport class AddQuestionComponent implements OnInit {\r\n  public Editor = ClassicEditor;\r\n  subject:[];\r\n  qId;\r\n  qTitle;\r\n  question = {\r\n    q_id: '',\r\n    content: '',\r\n    option1: '',\r\n    option2: '',\r\n    option3: '',\r\n    option4: '',\r\n    answer: '',\r\n    sub_id:'',\r\n    class:'',\r\n    added_by:'admin(Dummy)'\r\n  };\r\n\r\n  constructor(\r\n    private _subject: SubjectService,\r\n    private _route: ActivatedRoute,\r\n    private _question: QuestionService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.qId = this._route.snapshot.params.qid;\r\n    this.qTitle = this._route.snapshot.params.title;\r\n    this.question['q_id'] = this.qId;\r\n    this._subject.subjects().subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.subject = result.data;\r\n          \r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire('Error!!', 'error in loading data from server', 'error');\r\n      }\r\n    );\r\n  }\r\n\r\n  formSubmit() {\r\n    if (this.question.content.trim() == '' || this.question.content == null) {\r\n      return;\r\n    }\r\n\r\n    if (this.question.option1.trim() == '' || this.question.option1 == null) {\r\n      return;\r\n    }\r\n    if (this.question.option2.trim() == '' || this.question.option2 == null) {\r\n      return;\r\n    }\r\n    if (this.question.answer.trim() == '' || this.question.answer == null) {\r\n      return;\r\n    }\r\n    // if (this.question.sub_id.trim() == '' || this.question.sub_id == null) {\r\n    //   return;\r\n    // }\r\n    if (this.question.class.trim() == '' || this.question.class == null) {\r\n      return;\r\n    }\r\n\r\n    //form submit\r\n    this._question.addQuestion(this.question).subscribe(\r\n      (data: any) => {\r\n        Swal.fire('Success ', 'Question Added. Add Another one', 'success');\r\n        this.question.content = '';\r\n        this.question.option1 = '';\r\n        this.question.option2 = '';\r\n        this.question.option3 = '';\r\n        this.question.option4 = '';\r\n        this.question.answer = '';\r\n      },\r\n      (error) => {\r\n        Swal.fire('Error', 'Error in adding question', 'error');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n  <div class=\"row mt20\">\r\n    <div class=\"col-md-12\">\r\n      <h1>\r\n        Add Question to <span style=\"font-weight: bold\">{{ qTitle }}</span>\r\n      </h1>\r\n\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-subtitle>\r\n            Enter the detail of the new question\r\n          </mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <form class=\"mt20\" (submit)=\"formSubmit()\">\r\n            <!-- content field -->\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <!-- Class -->\r\n\r\n                <mat-form-field  class=\"w100\">\r\n                  <mat-label>Subjects</mat-label>\r\n                  <mat-select name=\"level\" [(ngModel)]=\"question.sub_id\">\r\n                    <mat-option *ngFor=\"let s of subject\" [value]=\"s.sub_id\">\r\n                      {{ s.sub_title }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <!-- option2 -->\r\n                <mat-form-field  class=\"w100\">\r\n                  <mat-label>Class</mat-label>\r\n                  <mat-select name=\"class\" [(ngModel)]=\"question.class\">\r\n                    <mat-option value=\"1\">1st</mat-option>\r\n                    <mat-option value=\"2\">2nd</mat-option>\r\n                    <mat-option value=\"3\">3rd</mat-option>\r\n                    <mat-option value=\"4\">4th</mat-option>\r\n                    <mat-option value=\"5\">5th</mat-option>\r\n                    <mat-option value=\"6\">6th</mat-option>\r\n                    <mat-option value=\"7\">7th</mat-option>\r\n                    <mat-option value=\"8\">8th</mat-option>\r\n                    <mat-option value=\"9\">9th</mat-option>\r\n                    <mat-option value=\"10\">10th</mat-option>\r\n                    <mat-option value=\"11\">11th</mat-option>\r\n                    <mat-option value=\"12\">12th</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <ckeditor\r\n              [editor]=\"Editor\"\r\n              name=\"content\"\r\n              [(ngModel)]=\"question.content\"\r\n            ></ckeditor>\r\n\r\n            <!-- options -->\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <!-- option1 -->\r\n\r\n                <mat-form-field class=\"w100\">\r\n                  <mat-label>Enter Option1</mat-label>\r\n                  <input\r\n                    required\r\n                    [(ngModel)]=\"question.option1\"\r\n                    name=\"option1\"\r\n                    type=\"text\"\r\n                    matInput\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <!-- option2 -->\r\n                <mat-form-field class=\"w100\">\r\n                  <mat-label>Enter Option2</mat-label>\r\n                  <input\r\n                    required\r\n                    [(ngModel)]=\"question.option2\"\r\n                    name=\"option2\"\r\n                    type=\"text\"\r\n                    matInput\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <!-- option3 -->\r\n                <mat-form-field class=\"w100\">\r\n                  <mat-label>Enter Option3</mat-label>\r\n                  <input\r\n                    [(ngModel)]=\"question.option3\"\r\n                    name=\"option3\"\r\n                    type=\"text\"\r\n                    matInput\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <!-- option4 -->\r\n                <mat-form-field class=\"w100\">\r\n                  <mat-label>Enter Option4</mat-label>\r\n                  <input\r\n                    [(ngModel)]=\"question.option4\"\r\n                    name=\"option4\"\r\n                    type=\"text\"\r\n                    matInput\r\n                  />\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- answer -->\r\n            <mat-form-field class=\"w100\">\r\n              <mat-label>Select Answer</mat-label>\r\n              <mat-select required [(ngModel)]=\"question.answer\" name=\"answer\">\r\n                <mat-option\r\n                  *ngIf=\"question.option1\"\r\n                  value='opt1'\r\n                  >{{ question.option1 }}</mat-option\r\n                >\r\n                <mat-option\r\n                  *ngIf=\"question.option2\"\r\n                  value='opt2'\r\n                  >{{ question.option2 }}</mat-option\r\n                >\r\n                <mat-option\r\n                  *ngIf=\"question.option3\"\r\n                  value='opt3'\r\n                  >{{ question.option3 }}</mat-option\r\n                >\r\n                <mat-option\r\n                  *ngIf=\"question.option4\"\r\n                  value='opt4'\r\n                  >{{ question.option4 }}</mat-option\r\n                >\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <div class=\"container text-center\">\r\n              <button mat-raised-button color=\"primary\">Add</button>\r\n            </div>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- {{ question | json }} -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-instructions',\r\n  templateUrl: './instructions.component.html',\r\n  styleUrls: ['./instructions.component.css'],\r\n})\r\nexport class InstructionsComponent implements OnInit {\r\n  qid;\r\n  quiz;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _quiz: QuizService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.qid = this._route.snapshot.params.qid;\r\n    // console.log(this.qid);\r\n\r\n    this._quiz.getQuiz(this.qid).subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.quiz = result.data;\r\n          console.log(this.quiz[0].title)\r\n          \r\n        }},\r\n      (error) => {\r\n        console.log(error);\r\n        alert('Error in loading quiz data');\r\n      }\r\n    );\r\n  }\r\n\r\n  startQuiz() {\r\n    Swal.fire({\r\n      title: 'Do you want to start the quiz?',\r\n\r\n      showCancelButton: true,\r\n      confirmButtonText: `Start`,\r\n      denyButtonText: `Don't save`,\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        var currentTime=Date.now();\r\n        var newTime = 1662810721945;\r\n        this._router.navigate(['/start/' + this.qid]);\r\n      } else if (result.isDenied) {\r\n        Swal.fire('Changes are not saved', '', 'info');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <mat-card class=\"mt20\">\r\n          <mat-card-header>\r\n            <!-- heading -->\r\n            <mat-card-title>\r\n              Read the instructions of this page carefully\r\n            </mat-card-title>\r\n            <mat-card-subtitle> One step more to go </mat-card-subtitle>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content class=\"ml20\">\r\n            <!-- content  -->\r\n\r\n            <h1>{{ quiz[0].title }}</h1>\r\n            <p>{{ quiz[0].description }}</p>\r\n\r\n            <mat-divider></mat-divider>\r\n            <br />\r\n            <h1>Important Instructions</h1>\r\n\r\n            <ul>\r\n              <li>This quiz is only for practice purpose.</li>\r\n\r\n              <!-- Let the time of each questions is  2 minutes -->\r\n              <li>\r\n                You have to submit quiz with in\r\n                <b> {{ quiz[0].no_of_ques * 1 }} Minutes.</b>\r\n              </li>\r\n              <li>You can attempt the quiz any number of time .</li>\r\n              <li>\r\n                There are <b>{{ quiz[0].no_of_ques }} questions</b> in this\r\n                quiz.\r\n              </li>\r\n              <li>\r\n                Each questions carries\r\n                <b>{{ quiz[0].max_marks / quiz[0].no_of_ques }} marks</b>. No\r\n                negative marking for wrong ones.\r\n              </li>\r\n              <li>All questions is of MCQ Types.</li>\r\n            </ul>\r\n\r\n            <mat-divider></mat-divider>\r\n            <br />\r\n            <h1>Attempting Quiz</h1>\r\n            <ul>\r\n              <li>Click <b>Start Quiz</b> button to start the quiz</li>\r\n              <li>\r\n                The time will start the moment you click the Start Test button.\r\n              </li>\r\n              <li>\r\n                You can not resume this quiz, if interrupted due to any reason.\r\n              </li>\r\n              <li>Scroll downl to move to next question.</li>\r\n              <li>Click on Submit Quiz button on completion of the quiz.</li>\r\n              <li>\r\n                Report of the test is automatically generated in the form of PDF\r\n                copy\r\n              </li>\r\n            </ul>\r\n          </mat-card-content>\r\n          <mat-card-actions class=\"text-center\">\r\n            <!-- actions -->\r\n            <button\r\n              (click)=\"startQuiz()\"\r\n              class=\"\"\r\n              mat-raised-button\r\n              color=\"primary\"\r\n            >\r\n              Start QUIZ\r\n            </button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n  <div class=\"container\">\r\n    <div class=\"row mt20\">\r\n      <div class=\"col-md-6 offset-md-3 text-center\">\r\n        <h1>Welcome to Examportal</h1>\r\n        <button mat-raised-button color=\"primary\">Home Page</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-ans',\r\n  templateUrl: './view-ans.component.html',\r\n  styleUrls: ['./view-ans.component.css']\r\n})\r\nexport class ViewAnsComponent implements OnInit {\r\n\r\n  qid;\r\n  stu_id=localStorage.getItem('stu_id');\r\n  show_answersheet={\r\n    qid:'',\r\n    stu_id:''\r\n  }\r\n  quiz;\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _user: UserService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.qid = this._route.snapshot.params.qid;\r\n    console.log(this.qid);\r\n    console.log(this.stu_id);\r\n    const get_answersheet= {}\r\n    get_answersheet['stu_id'] = this.stu_id\r\n    get_answersheet['q_id'] = this.qid;\r\n    console.log(get_answersheet)\r\n    this._user.getAnswersheet(get_answersheet).subscribe(\r\n      (result: any) => {\r\n          this.quiz = result.data;\r\n          console.log(this.quiz)\r\n          \r\n        },\r\n      (error) => {\r\n        console.log(error);\r\n        alert('Error in loading quiz data');\r\n      }\r\n    );\r\n  }\r\n\r\n  startQuiz() {\r\n    Swal.fire({\r\n      title: 'Do you want to start the quiz?',\r\n\r\n      showCancelButton: true,\r\n      confirmButtonText: `Start`,\r\n      denyButtonText: `Don't save`,\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        this._router.navigate(['/start/' + this.qid]);\r\n      } else if (result.isDenied) {\r\n        Swal.fire('Changes are not saved', '', 'info');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\" style=\"margin-top: 20px;\">\r\n        <div class=\"col-md-12 text-center\">\r\n          <button mat-raised-button color=\"primary\" routerLink=\"/user-dashboard/0\" class=\"justify-content-center\">Home</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          \r\n  \r\n          <mat-card  class=\"mt10\">\r\n            <mat-card-content>\r\n                <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <h3><b>Total Questions: </b> {{quiz.total_question}}</h3>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <h3><b>Total Attempted </b> {{(quiz.answer_data).length}} </h3>\r\n                </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <!-- <h3><b>Correct: </b> {{quiz.data.marks_obtained}}</h3> -->\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <!-- <h3><b>Incorrect: </b> {{quiz.total_question-quiz.no_of_correct_answers}}</h3> -->\r\n                </div>\r\n              </div>\r\n              \r\n              \r\n              <mat-divider> </mat-divider>\r\n              \r\n            </mat-card-content>\r\n          </mat-card><br>\r\n          <div *ngFor=\"let q of quiz.answer_data; let i = index\">\r\n          <mat-card *ngIf=\"q.result==='right'\" style=\"background-color: #b6f2ba;\">\r\n            \r\n                <mat-card-content>\r\n                    <p>\r\n                      <b>Q {{ i + 1 }})</b>\r\n                      \r\n                      <span class=\"ml10\" [innerHTML]=\"q.content\"></span>\r\n                    </p>\r\n                    <mat-divider> </mat-divider>\r\n                    <div class=\"row mt20\">\r\n                      <div class=\"col-md-6\" >\r\n                        {{q.opt1}}<mat-icon *ngIf=\"q.ans==='opt1'\">done_all</mat-icon>\r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                        {{q.opt2}}<mat-icon  *ngIf=\"q.ans==='opt2'\">done_all</mat-icon>\r\n                    </div>\r\n                    </div>\r\n        \r\n                    <div class=\"row mt5\">\r\n                      <div class=\"col-md-6\" >\r\n                       {{q.opt3}}<mat-icon  *ngIf=\"q.ans==='opt3'\">done_all</mat-icon>\r\n                      </div>\r\n                      <div class=\"col-md-6\" >\r\n                       {{q.opt4}}<mat-icon *ngIf=\"q.ans==='opt4'\">done_all</mat-icon>\r\n                      </div>\r\n                    </div>\r\n                  </mat-card-content>\r\n       \r\n          </mat-card><br>\r\n          <mat-card *ngIf=\"q.result==='wrong'\" style=\"background-color: #f0d3d3;\">\r\n            \r\n            <mat-card-content>\r\n                <p>\r\n                  <b>Q {{ i + 1 }})</b>\r\n                  \r\n                  <span class=\"ml10\" [innerHTML]=\"q.content\"></span>\r\n                </p>\r\n                <mat-divider> </mat-divider>\r\n                <div class=\"row mt20\">\r\n                  <div class=\"col-md-6\" >\r\n                    {{q.opt1}}<mat-icon *ngIf=\"q.ans==='opt1'\">done_all</mat-icon>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    {{q.opt2}}<mat-icon  *ngIf=\"q.ans==='opt2'\">done_all</mat-icon>\r\n                </div>\r\n                </div>\r\n    \r\n                <div class=\"row mt5\">\r\n                  <div class=\"col-md-6\" >\r\n                   {{q.opt3}}<mat-icon  *ngIf=\"q.ans==='opt3'\">done_all</mat-icon>\r\n                  </div>\r\n                  <div class=\"col-md-6\" >\r\n                   {{q.opt4}}<mat-icon *ngIf=\"q.ans==='opt4'\">done_all</mat-icon>\r\n                  </div>\r\n                </div>\r\n                <p *ngIf=\"q.selected_answer==='opt1'\"><b>You Selected: </b> {{q.opt1}}</p>\r\n                <p *ngIf=\"q.selected_answer==='opt2'\"><b>You Selected: </b> {{q.opt2}}</p>\r\n                <p *ngIf=\"q.selected_answer==='opt3'\"><b>You Selected: </b> {{q.opt3}}</p>\r\n                <p *ngIf=\"q.selected_answer==='opt4'\"><b>You Selected: </b> {{q.opt4}}</p>\r\n              </mat-card-content>\r\n   \r\n      </mat-card>\r\n          </div>\r\n  \r\n\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  ","<div class=\"bootstrap-wrapper\" style=\"margin-top: 30px;\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row mt20\" *ngIf=\"quizzes\">\r\n      <div class=\"col-md-4\" *ngFor=\"let q of quizzes\">\r\n        <mat-card class=\"mb20\" *ngIf=\"q.quiz_submitted_by_user===false\">\r\n          <mat-card-header>\r\n            <div mat-card-avatar class=\"example-header-image\"></div>\r\n            <mat-card-title>\r\n              {{ q.title }} \r\n            </mat-card-title>\r\n                         \r\n            <mat-card-subtitle>\r\n              {{ q.cat_title }}\r\n            </mat-card-subtitle>\r\n            <mat-card-subtitle>\r\n              <div style=\"margin-top: -15px;\">\r\n              <p style=\"float: left; margin-right: 25px;\">Max.Marks: {{q.max_marks}}</p><p style=\"float: right;\">Questions:{{ q.no_of_ques }}</p>\r\n            </div>\r\n            </mat-card-subtitle>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <p style=\"margin-left: 55px;\">{{ q.description }}</p>\r\n            \r\n          </mat-card-content>\r\n          <mat-card-action>\r\n            <div style=\"margin-left:50px;\">\r\n              \r\n            <button\r\n              \r\n            mat-raised-button\r\n              class=\"btnColor-gradient-blue\"\r\n              [routerLink]=\"'/user-dashboard/instructions/' + q.q_id\"\r\n            \r\n            ><mat-icon>play_arrow</mat-icon>\r\n              Start\r\n            </button>&nbsp;\r\n            <!-- <button mat-button style=\"margin-right:10px;\"class=\"btnColor \"\r\n            [routerLink]=\"'/user-dashboard/view-ans/' + q.q_id\"\r\n            >Result</button> -->\r\n            <button mat-raised-button class=\"btnColor-gradient-blue\"\r\n            [routerLink]=\"'/user-dashboard/ranking/' + q.q_id\"\r\n            ><mat-icon> bar_chart</mat-icon>Ranking</button>\r\n          </div>\r\n          </mat-card-action>\r\n        </mat-card>\r\n        <mat-card class=\"mb20\" *ngIf=\"q.quiz_submitted_by_user===true\" style=\"background-color:#f1f0fa;\">\r\n          <mat-card-header>\r\n            <div mat-card-avatar class=\"example-header-image\"></div>\r\n            <mat-card-title>\r\n              {{ q.title }} \r\n            </mat-card-title>\r\n                         \r\n            <mat-card-subtitle>\r\n              {{ q.cat_title }}\r\n            </mat-card-subtitle>\r\n            <mat-card-subtitle>\r\n              <div style=\"margin-top: -15px;\">\r\n              <p style=\"float: left; margin-right: 30px;\">Max.Marks: {{q.max_marks}}</p><p style=\"float: right;\">Questions:{{ q.no_of_ques }}</p>\r\n            </div>\r\n            </mat-card-subtitle>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <p style=\"margin-left: 55px;\">{{ q.description }}</p>\r\n            \r\n          </mat-card-content>\r\n          <mat-card-action>\r\n            <div style=\"margin-left:50px;\">\r\n            <!-- <button\r\n              mat-button\r\n              class=\"btnColor\"\r\n              [routerLink]=\"'/user-dashboard/instructions/' + q.q_id\"\r\n            \r\n            >\r\n              Start\r\n            </button>&nbsp; -->\r\n            <button mat-button style=\"margin-right:10px;\"class=\"btnColor \"\r\n            [routerLink]=\"'/user-dashboard/view-ans/' + q.q_id\"\r\n            >Result</button>\r\n            <button mat-button class=\"btnColor\"\r\n            [routerLink]=\"'/user-dashboard/ranking/' + q.q_id\"\r\n            >Ranking</button>\r\n          </div>\r\n          </mat-card-action>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div class=\"col-md-12\" *ngIf=\"quizzes.length == 0\">\r\n        <mat-card>\r\n          <mat-card-content>\r\n            <h1>No data in this category</h1>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\n\r\n@Component({\r\n  selector: 'app-load-quiz',\r\n  templateUrl: './load-quiz.component.html',\r\n  styleUrls: ['./load-quiz.component.css'],\r\n})\r\nexport class LoadQuizComponent implements OnInit {\r\n  catId;\r\n  quizzes;\r\n  stu_id=localStorage.getItem('stu_id');\r\n  constructor(private _route: ActivatedRoute, private _quiz: QuizService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe((params) => {\r\n      console.log(params);\r\n      this.catId = params.catId;\r\n      if (this.catId == 0) {\r\n        console.log('Load all the quiz');\r\n\r\n        this._quiz.getActiveQuizzes(this.stu_id).subscribe(\r\n          (result: any) => {\r\n            if(result.status=='success'){\r\n              this.quizzes = result.data;\r\n              \r\n            }},\r\n          (error) => {\r\n            console.log(error);\r\n            alert('error in loading all quizzes');\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Load specific quiz');\r\n\r\n        this._quiz.getActiveQuizzesOfCategory(this.catId).subscribe(\r\n          (result: any) => {\r\n            if(result.status=='success'){\r\n              this.quizzes = result.data;\r\n              \r\n            }},\r\n          (error) => {\r\n            alert('error in loading quiz data');\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubjectService {\r\n\r\n  constructor(private _http: HttpClient) {}\r\n  //load all the cateogries\r\n  public subjects() {\r\n    return this._http.get(`${baseUrl}/subject/`);\r\n  }\r\n\r\n  //add new category\r\n  public addSubject(subject) {\r\n    return this._http.post(`${baseUrl}/add/subject/`, subject);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MasterService {\r\n\r\n  constructor() { }\r\n\r\n  isLoggedIn(){\r\n    return localStorage.getItem('stu_id')!=null\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MasterService } from 'src/app/services/master.service';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  status:boolean;\r\n\r\n  @Output() SideNavToggle = new EventEmitter();  \r\n\r\n  \r\n  openSidenav() {\r\n   this.SideNavToggle.emit();\r\n}\r\n\r\n\r\n  constructor(private _master:MasterService,private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  logout(){\r\n    localStorage.removeItem('stu_id');\r\n    localStorage.removeItem('role');\r\n    localStorage.removeItem('auth-token');\r\n    this.router.navigate([\"login\"])\r\n  }\r\n  loggedIn(){\r\n    return localStorage.getItem('stu_id');\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    \r\n    <div *ngIf=\"loggedIn()\">\r\n      <button mat-icon-button (click)=\"openSidenav()\" >\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div *ngIf=\"status===false\">\r\n      \r\n    </div>\r\n    \r\n    <div class=\"logo\" style=\"margin-left: 10px;\"><img src=\"assets/logo1.png\" width=\"100px\"height=\"50px\"></div>\r\n\r\n    <button *ngIf=\"loggedIn()\" mat-icon-button class=\"example-icon favorite-icon\"  id=\"logout\"  (click)=\"logout()\" >\r\n      <mat-icon>input</mat-icon>\r\n    </button>\r\n\r\n  </mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { LevelService } from 'src/app/services/level.service';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-quiz',\r\n  templateUrl: './add-quiz.component.html',\r\n  styleUrls: ['./add-quiz.component.css'],\r\n})\r\nexport class AddQuizComponent implements OnInit {\r\n  categories = [];\r\n  levels = [];\r\n\r\n  quizData = {\r\n    title: '',\r\n    description: '',\r\n    maxMarks: '',\r\n    numberOfQuestions: '',\r\n    active: true,\r\n    cat_id:'',\r\n    level_id:'',\r\n  };\r\n\r\n  constructor(\r\n    private _cat: CategoryService,\r\n    private _level: LevelService,\r\n    private _snack: MatSnackBar,\r\n    private _quiz: QuizService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._cat.categories(localStorage.getItem('auth-token')).subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.categories = result.data;\r\n          \r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire('Error!!', 'error in loading data from server', 'error');\r\n      }\r\n    );\r\n    this._level.levels().subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.levels = result.data;\r\n          \r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire('Error!!', 'error in loading data from server', 'error');\r\n      }\r\n    );\r\n  }\r\n  //\r\n  addQuiz() {\r\n    if (this.quizData.title.trim() == '' || this.quizData.title == null) {\r\n      this._snack.open('Title Required !!', '', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    //validation...\r\n\r\n    //call server\r\n    this._quiz.addQuiz(this.quizData).subscribe(\r\n      (data) => {\r\n        Swal.fire('Success', 'quiz is added', 'success');\r\n        this.quizData = {\r\n          title: '',\r\n          description: '',\r\n          maxMarks: '',\r\n          numberOfQuestions: '',\r\n          active: true,\r\n          cat_id:'',\r\n          level_id:''\r\n  ,\r\n        };\r\n      },\r\n\r\n      (error) => {\r\n        Swal.fire('Error!! ', 'Error while adding quiz', 'error');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <h1>Add New Quiz</h1>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8 offset-md-2\">\r\n        <form (ngSubmit)=\"addQuiz()\">\r\n\r\n          <!-- //category select  -->\r\n          <mat-form-field appearance=\"fill\" class=\"mt20 w100\">\r\n            <mat-label>Levels</mat-label>\r\n            <mat-select name=\"level\" [(ngModel)]=\"quizData.level_id\">\r\n              <mat-option *ngFor=\"let l of levels\" [value]=\"l.level_id\">\r\n                {{ l.level_title }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <!-- title field  -->\r\n          <mat-form-field class=\"w100\" appearance=\"fill\">\r\n            <mat-label>Enter Title</mat-label>\r\n            <input\r\n              [(ngModel)]=\"quizData.title\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"Enter here\"\r\n              matInput\r\n              required\r\n            />\r\n          </mat-form-field>\r\n\r\n          <!-- description field  -->\r\n\r\n          <mat-form-field class=\"w100\" appearance=\"fill\">\r\n            <mat-label>Enter Description </mat-label>\r\n            <textarea\r\n              [(ngModel)]=\"quizData.description\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              placeholder=\"Enter here\"\r\n              matInput\r\n              rows=\"5\"\r\n            ></textarea>\r\n          </mat-form-field>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <!-- //max marks -->\r\n              <mat-form-field class=\"w100\" appearance=\"fill\">\r\n                <mat-label>Maximum Marks</mat-label>\r\n                <input\r\n                  [(ngModel)]=\"quizData.maxMarks\"\r\n                  type=\"text\"\r\n                  name=\"maxMarks\"\r\n                  placeholder=\"Enter here\"\r\n                  matInput\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <!-- number of question to be shown  -->\r\n              <mat-form-field class=\"w100\" appearance=\"fill\">\r\n                <mat-label>Number of Question</mat-label>\r\n                <input\r\n                  [(ngModel)]=\"quizData.numberOfQuestions\"\r\n                  type=\"text\"\r\n                  name=\"numberOfQuestions\"\r\n                  placeholder=\"Enter here\"\r\n                  matInput\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- active field   -->\r\n\r\n          <mat-slide-toggle\r\n            name=\"active\"\r\n            [(ngModel)]=\"quizData.active\"\r\n            class=\"mt20\"\r\n            color=\"primary\"\r\n          >\r\n            Publish Status\r\n          </mat-slide-toggle>\r\n\r\n          <br />\r\n          <!-- //category select  -->\r\n          <mat-form-field appearance=\"fill\" class=\"mt20 w100\">\r\n            <mat-label>Categories</mat-label>\r\n            <mat-select name=\"category\" [(ngModel)]=\"quizData.cat_id\">\r\n              <mat-option *ngFor=\"let c of categories\" [value]=\"c.cat_id\">\r\n                {{ c.cat_title }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <div class=\"container text-center\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n\r\n<!-- {{ quizData | json }} -->\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HTTP_INTERCEPTORS,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private login: LoginService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    //add the jwt token (localStorage) request\r\n    let authReq = req;\r\n    const token = this.login.getToken();\r\n    console.log('inside interceptor');\r\n\r\n    if (token != null) {\r\n      authReq = authReq.clone({\r\n        setHeaders: { Authorization: `Bearer ${token}` },\r\n      });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n  },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-check-ans',\r\n  templateUrl: './check-ans.component.html',\r\n  styleUrls: ['./check-ans.component.css']\r\n})\r\nexport class CheckAnsComponent implements OnInit {\r\n\r\n  public checkAns = {\r\n    registrationId: '',\r\n    name: '',\r\n    class: '',\r\n    group: '',\r\n  };\r\n\r\n  constructor(private userService: UserService,private snack: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\nformSubmit(){\r\n  console.log(this.checkAns.registrationId);\r\n\r\n}\r\nsendit(data){\r\n  console.log(\"Value\",data)\r\n  this.userService.fetchUserDetails(data).subscribe(\r\n    (data: any) => {\r\n      //success\r\n      console.log(data);\r\n      //alert('success');\r\n      Swal.fire('Successfully done !!', 'User id is ' + data.id, 'success');\r\n    },\r\n)}\r\n}\r\n","<mat-card>\r\n    <h1>Check Answer</h1>\r\n  \r\n    <mat-card-content>\r\n      <div class=\"bootstrap-wrapper\">\r\n        <form (ngSubmit)=\"formSubmit()\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\">\r\n            \r\n              <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                <mat-label>Registration ID</mat-label>\r\n  \r\n                <input\r\n                  required\r\n                  autofocus\r\n                  type=\"text\"\r\n                  name=\"registrationId\"\r\n                  [(ngModel)]=\"checkAns.registrationId\"\r\n                  (blur)=\"sendit($event.target.value)\"\r\n                  matInput\r\n                  placeholder=\"Enter here\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          <div class=\"col-md-3\">\r\n              <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                <mat-label>Full Name</mat-label>\r\n  \r\n                <input\r\n                  required\r\n                  \r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  [(ngModel)]=\"checkAns.name\"\r\n                  matInput\r\n                  placeholder=\"Enter here\"\r\n                />\r\n              </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n              <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                <mat-label>Class</mat-label>\r\n  \r\n                <input\r\n                  required\r\n                  \r\n                  type=\"text\"\r\n                  name=\"class\"\r\n                  [(ngModel)]=\"checkAns.class\"\r\n                  matInput\r\n                  placeholder=\"Enter here\"\r\n                />\r\n              </mat-form-field>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n              <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                <mat-label>Group</mat-label>\r\n  \r\n                <input\r\n                  required\r\n                  \r\n                  type=\"text\"\r\n                  name=\"group\"\r\n                  [(ngModel)]=\"checkAns.group\"\r\n                  matInput\r\n                  placeholder=\"Enter here\"\r\n                />\r\n              </mat-form-field>\r\n          </div>\r\n          <div class=\"container text-center mt15\">\r\n            <button mat-raised-button color=\"primary\">Add</button>\r\n          </div>\r\n        </div>\r\n        </form>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-ranking',\r\n  templateUrl: './ranking.component.html',\r\n  styleUrls: ['./ranking.component.css']\r\n})\r\n\r\nexport class RankingComponent implements OnInit {\r\n  \r\nqid;\r\ndataSource;\r\nsno:number\r\ndisplayedColumns: string[] = ['position', 'name', 'score'];\r\n  constructor(private _route:ActivatedRoute,private _quiz:QuizService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.qid = this._route.snapshot.params.qid;\r\n\r\n\r\n    this._quiz.getRanking(this.qid).subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.dataSource = result.data;\r\n          \r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire('Error !', 'Error in loading data !', 'error');\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper mt20\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 text-center\">\r\n          <button mat-raised-button color=\"primary\" routerLink=\"/user-dashboard/0\" class=\"justify-content-center\">Home</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" style=\"margin-top: 20px;\">\r\n            <div class=\"col-md-2\"></div>\r\n            <div class=\"col-md-8\">\r\n                <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                    <!--- Note that these columns can be defined in any order.\r\n                          The actual rendered columns are set as a property on the row definition\" -->\r\n                  \r\n                    <!-- Position Column -->\r\n                    <ng-container matColumnDef=\"position\">\r\n                      <th mat-header-cell *matHeaderCellDef><b>Ranking</b> </th>\r\n                      <td mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </td>\r\n                    </ng-container>\r\n                  \r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"name\">\r\n                      <th mat-header-cell *matHeaderCellDef><b>Name</b></th>\r\n                      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                    </ng-container>\r\n                  \r\n                  \r\n                  \r\n                    <!-- Symbol Column -->\r\n                    <ng-container matColumnDef=\"score\">\r\n                      <th mat-header-cell *matHeaderCellDef><b>Total Score</b></th>\r\n                      <td mat-cell *matCellDef=\"let element\"> {{element.marks_obtained}} </td>\r\n                    </ng-container>\r\n                  \r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                  </table>\r\n                  \r\n                  \r\n            </div>\r\n            <div class=\"col-md-2\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n            ","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ToolbarComponent } from 'src/app/components/navbar/toolbar/toolbar.component';\r\n\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { MasterService } from 'src/app/services/master.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  hide = true\r\n  loginData = {\r\n    regId: '',\r\n    password: '',\r\n  };\r\n  someSubscription: any;\r\n\r\n  constructor(\r\n    private snack: MatSnackBar,\r\n    private login: LoginService,\r\n    private router: Router,\r\n    private _master:MasterService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this._master.isLoggedIn &&  localStorage.getItem('role')=='student'){\r\n        this.router.navigate(['user-dashboard/0'])\r\n    }\r\n    if(this._master.isLoggedIn &&  localStorage.getItem('role')=='admin'){\r\n      this.router.navigate(['admin/welcome'])\r\n  }\r\n  }\r\n\r\n  formSubmit() {\r\n    \r\n    if (\r\n      this.loginData.regId.trim() == '' ||\r\n      this.loginData.regId == null\r\n    ) {\r\n      this.snack.open('Username is required !! ', '', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.loginData.password.trim() == '' ||\r\n      this.loginData.password == null\r\n    ) {\r\n      this.snack.open('Password is required !! ', '', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    //request to server to generate token\r\n    this.login.generateToken(this.loginData).subscribe(\r\n      (result: any) => {\r\n      if(result.status=='success'){\r\n        \r\n        const role = result.data[0]['role'];\r\n        localStorage.setItem('auth-token',result.authentication_token);\r\n        localStorage.setItem('role',role);\r\n        localStorage.setItem('stu_id',result.data[0]['regId']);\r\n  \r\n      }\r\n      else{\r\n        this.snack.open('Invalid Details !! Try again', '', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n      if(this._master.isLoggedIn && localStorage.getItem('role')=='admin'){\r\n        this.router.navigate(['admin/welcome'])\r\n        \r\n      }\r\n      else if(this._master.isLoggedIn && localStorage.getItem('role')=='student'){\r\n        this.router.navigate(['user-dashboard/0']);\r\n      }\r\n  },\r\n);\r\n}\r\n}\r\n","<div class=\"bootstrap-wrapper \">\r\n  <div class=\"container \">\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6 offset-md-3\">\r\n        <mat-card>\r\n          <h2 class=\"text-center vstd-headers\">Login Here</h2>\r\n\r\n          <!-- {{ loginData | json }} -->\r\n          <form (ngSubmit)=\"formSubmit()\">\r\n            <!-- username field -->\r\n            \r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>Registration Id</mat-label>\r\n              <input matInput placeholder=\"Enter Here\" [(ngModel)]=\"loginData.regId\" name=\"regId\" required>\r\n              <mat-icon matSuffix>alternate_email</mat-icon>\r\n            </mat-form-field>\r\n\r\n            <!-- password field  -->\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>User Password</mat-label>\r\n              <input matInput placeholder=\"Password\" [(ngModel)]=\"loginData.password\" name=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n              <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n            </mat-form-field>\r\n\r\n            \r\n            <div class=\"container text-center\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\">\r\n                Login\r\n              </button>\r\n              <button class=\"ml10\" mat-raised-button color=\"primary\">\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  public loginStatusSubject = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //current user: which is loggedin\r\n  public getCurrentUser() {\r\n    return this.http.get(`${baseUrl}/current-user`);\r\n  }\r\n\r\n  //generate token\r\n\r\n  public generateToken(loginData: any) {\r\n    return this.http.post(`${baseUrl}/generate-token`, loginData);\r\n  }\r\n\r\n  //login user: set token in localStorage\r\n  public loginUser(token) {\r\n    localStorage.setItem('token', token);\r\n    return true;\r\n  }\r\n\r\n\r\n  //isLogin: user is logged in or not\r\n  public isLoggedIn() {\r\n    let tokenStr = localStorage.getItem('token');\r\n    if (tokenStr == undefined || tokenStr == '' || tokenStr == null) {\r\n      return true;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // logout : remove token from local storage\r\n  public logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    return true;\r\n  }\r\n\r\n  //get token\r\n  public getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  //set userDetail\r\n  public setUser(user) {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  //getUser\r\n  public getUser() {\r\n    let userStr = localStorage.getItem('user');\r\n    if (userStr != null) {\r\n      return JSON.parse(userStr);\r\n    } else {\r\n      this.logout();\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //get user role\r\n\r\n  public getUserRole() {\r\n    let user = this.getUser();\r\n    return user.authorities[0].authority;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SubjectService } from 'src/app/services/subject.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-view-subject',\r\n  templateUrl: './view-subject.component.html',\r\n  styleUrls: ['./view-subject.component.css']\r\n})\r\nexport class ViewSubjectComponent implements OnInit {\r\n\r\n  subjects = [];\r\n\r\n  constructor(private _subject: SubjectService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._subject.subjects().subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.subjects = result.data;\r\n          \r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n\r\n      (error) => {\r\n        //\r\n        console.log(error);\r\n        Swal.fire('Error !!', 'Error in loading data', 'error');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n    <h1>All Subjects</h1>\r\n    <mat-list>\r\n      <mat-list-item *ngFor=\"let s of subjects\">\r\n        <mat-icon mat-list-icon>category</mat-icon>\r\n        <div mat-line>{{ s.sub_title }}</div>\r\n        <div mat-line>{{ s.sub_desc }}</div>\r\n        <mat-divider></mat-divider>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  \r\n    <div class=\"container text-center mt20\">\r\n      <button routerLink=\"/admin/add-subject\" mat-raised-button color=\"primary\">\r\n        Add New Subject\r\n      </button>\r\n    </div>\r\n  </mat-card>\r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>footer works!</p>\r\n","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'TestYourself';\r\n}\r\n","<ngx-ui-loader\r\n  fgsColor=\"primary\"\r\n  pbColor=\"primary\"\r\n  text=\"Please wait..\"\r\n  pbThickness=\"6\"\r\n  textColor=\"primary\"\r\n></ngx-ui-loader>\r\n\r\n\r\n\r\n  <app-toolbar (SideNavToggle)=\"sidenav.toggle()\"></app-toolbar>\r\n  <mat-sidenav-container>\r\n  <mat-sidenav #sidenav>\r\n    <app-navbar (closeSideNav)=\"sidenav.close()\"></app-navbar>\r\n  </mat-sidenav>\r\n\r\n    \r\n\r\n\r\n    <main>\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n    \r\n</mat-sidenav-container>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuestionService {\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  public getQuestionsOfQuiz(qid) {\r\n    return this._http.get(`${baseUrl}/question/quiz/all/${qid}`);\r\n  }\r\n \r\n  public getQuestionsOfQuizForTest(qid) {\r\n    return this._http.get(`${baseUrl}/question/quiz/${qid}`);\r\n  }\r\n\r\n  //add question\r\n  public addQuestion(question) {\r\n    return this._http.post(`${baseUrl}/add/question/`, question);\r\n  }\r\n  //delete question\r\n  public deleteQuestion(questionId) {\r\n    return this._http.delete(`${baseUrl}/question/${questionId}`);\r\n  }\r\n\r\n  //eval quiz\r\n  public evalQuiz(submit_payload) {\r\n    // questions['stu_id'] =  '21212'\r\n    return this._http.post(`${baseUrl}/add/submit_ans`, submit_payload);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-category',\r\n  templateUrl: './add-category.component.html',\r\n  styleUrls: ['./add-category.component.css'],\r\n})\r\nexport class AddCategoryComponent implements OnInit {\r\n  category = {\r\n    title: '',\r\n    description: '',\r\n  };\r\n\r\n  constructor(\r\n    private _category: CategoryService,\r\n    private _snack: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  formSubmit() {\r\n    if (this.category.title.trim() == '' || this.category.title == null) {\r\n      this._snack.open('Title Required !!', '', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    //all done\r\n\r\n    this._category.addCategory(this.category).subscribe(\r\n      (data: any) => {\r\n        this.category.title = '';\r\n        this.category.description = '';\r\n        Swal.fire('Success !!', 'Category is added successfuly', 'success');\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire('Error !!', 'Server error !!', 'error');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <h1>Add New Category</h1>\r\n\r\n  <mat-card-content>\r\n    <div class=\"bootstrap-wrapper\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-8 offset-md-2\">\r\n          <form (ngSubmit)=\"formSubmit()\">\r\n            <mat-form-field class=\"w100\" appearance=\"outline\">\r\n              <mat-label>Title</mat-label>\r\n\r\n              <input\r\n                required\r\n                autofocus\r\n                type=\"text\"\r\n                name=\"title\"\r\n                matInput\r\n                placeholder=\"Enter here\"\r\n                [(ngModel)]=\"category.title\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"w100\" appearance=\"outline\">\r\n              <mat-label>Description</mat-label>\r\n\r\n              <textarea\r\n                name=\"description\"\r\n                matInput\r\n                placeholder=\"Enter Category Description\"\r\n                [(ngModel)]=\"category.description\"\r\n                rows=\"15\"\r\n              ></textarea>\r\n            </mat-form-field>\r\n\r\n            <div class=\"container text-center mt15\">\r\n              <button mat-raised-button color=\"primary\">Add</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MasterService } from './master.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NormalGuard implements CanActivate {\r\n  constructor(private _masterService:MasterService,private _router:Router){}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if(this._masterService.isLoggedIn() && localStorage.getItem('role')=='student'){\r\n        return true;\r\n      }\r\n      else{\r\n        this,this._router.navigate([\"login\"]);\r\n        return false;\r\n      }\r\n  }\r\n  \r\n}\r\n","<mat-card *ngIf=\"user\">\r\n  <h1>Your Profile Details</h1>\r\n  <!-- {{ user | json }} -->\r\n  <mat-card-content>\r\n    <div class=\"bootstrap-wrapper\">\r\n      <div class=\"container\">\r\n        <div class=\"container text-center\">\r\n          <img\r\n            src=\"https://t4.ftcdn.net/jpg/03/46/93/61/360_F_346936114_RaxE6OQogebgAWTalE1myseY1Hbb5qPM.jpg\"\r\n            alt=\"\"\r\n            class=\"profile-image\"\r\n          />\r\n\r\n          <h1 class=\"mt20\">{{ user.firstName }} {{ user.lastName }}</h1>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-10 offset-md-1\">\r\n            <!-- //table Details  -->\r\n            <table class=\"table text-center\">\r\n              <tr>\r\n                <td>Username</td>\r\n                <td>{{ user.username }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Userid</td>\r\n                <td>EXAM{{ user.id }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Phone</td>\r\n                <td>{{ user.phone }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Role</td>\r\n                <td>{{ user.authorities[0].authority }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Status</td>\r\n                <td>{{ user.enabled ? \"ACTIVE\" : \"NOTACTIVE\" }}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"text-center\">\r\n    <button mat-raised-button color=\"primary\">UPDATE</button>\r\n    <button mat-raised-button color=\"primary\">SHARE</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user = null;\r\n  constructor(private login: LoginService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.login.getUser();\r\n    // this.login.getCurrentUser().subscribe(\r\n    //   (user: any) => {\r\n    //     this.user = user;\r\n    //   },\r\n    //   (error) => {\r\n    //     alert('error');\r\n    //   }\r\n    // );\r\n  }\r\n}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { authInterceptorProviders } from './services/auth.interceptor';\r\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\r\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { SidebarComponent } from './pages/admin/sidebar/sidebar.component';\r\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\r\nimport { ViewCategoriesComponent } from './pages/admin/view-categories/view-categories.component';\r\nimport { AddCategoryComponent } from './pages/admin/add-category/add-category.component';\r\nimport { ViewQuizzesComponent } from './pages/admin/view-quizzes/view-quizzes.component';\r\nimport { AddQuizComponent } from './pages/admin/add-quiz/add-quiz.component';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { UpdateQuizComponent } from './pages/admin/update-quiz/update-quiz.component';\r\nimport { ViewQuizQuestionsComponent } from './pages/admin/view-quiz-questions/view-quiz-questions.component';\r\nimport { AddQuestionComponent } from './pages/admin/add-question/add-question.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\nimport { SidebarComponent as UserSidebar } from './pages/user/sidebar/sidebar.component';\r\nimport { LoadQuizComponent } from './pages/user/load-quiz/load-quiz.component';\r\nimport { InstructionsComponent } from './pages/user/instructions/instructions.component';\r\nimport { StartComponent } from './pages/user/start/start.component';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { NgxUiLoaderHttpModule, NgxUiLoaderModule } from 'ngx-ui-loader';\r\nimport { CheckAnsComponent } from './pages/admin/chechkAns/check-ans/check-ans.component';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { AddSubjectComponent } from './pages/admin/add-subject/add-subject/add-subject.component';\r\nimport { AddLevelComponent } from './pages/admin/add-level/add-level/add-level.component';\r\nimport { ViewLevelComponent } from './pages/admin/view-level/view-level/view-level.component';\r\nimport { ViewSubjectComponent } from './pages/admin/view-subject/view-subject/view-subject.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { ViewAnsComponent } from './pages/user/view-ans/view-ans/view-ans.component';\r\nimport { ToolbarComponent } from './components/navbar/toolbar/toolbar.component';\r\n\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { UploadUserComponent } from './pages/admin/upload-user/upload-user/upload-user.component';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { RankingComponent } from './pages/user/ranking/ranking/ranking.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    FooterComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    UserDashboardComponent,\r\n    ProfileComponent,\r\n    SidebarComponent,\r\n    WelcomeComponent,\r\n    ViewCategoriesComponent,\r\n    AddCategoryComponent,\r\n    ViewQuizzesComponent,\r\n    AddQuizComponent,\r\n    UpdateQuizComponent,\r\n    ViewQuizQuestionsComponent,\r\n    AddQuestionComponent,\r\n    UserSidebar,\r\n    LoadQuizComponent,\r\n    InstructionsComponent,\r\n    StartComponent,\r\n    CheckAnsComponent,\r\n    AddSubjectComponent,\r\n    AddLevelComponent,\r\n    ViewLevelComponent,\r\n    ViewSubjectComponent,\r\n    ViewAnsComponent,\r\n    ToolbarComponent,\r\n    UploadUserComponent,\r\n    RankingComponent\r\n  ],\r\n  imports: [\r\n    \r\n    BrowserModule,\r\n    MatDatepickerModule,\r\n    MatSidenavModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatSlideToggleModule,\r\n    MatSelectModule,\r\n    CKEditorModule,\r\n    MatProgressSpinnerModule,\r\n    NgxUiLoaderModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatNativeDateModule,\r\n    \r\n    NgxUiLoaderHttpModule.forRoot({\r\n      showForeground: true,\r\n    }),\r\n  ],\r\n  providers: [authInterceptorProviders,{provide: LocationStrategy, useClass: HashLocationStrategy}],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.css']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-1\">\r\n      </div>\r\n\r\n      <div class=\"col-md-10\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n      <div class=\"col-md-1\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\" style=\"margin-top: 30px;\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <mat-card class=\"mb20\">\r\n            <mat-card-header>\r\n              <div mat-card-avatar class=\"example-header-image\"><mat-icon>assignment</mat-icon></div>\r\n              <mat-card-title>\r\n             Total Users\r\n              </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <h1>4</h1>\r\n            </mat-card-content>\r\n            \r\n              <button mat-button color=\"primary\">View</button>\r\n              <button\r\n                mat-button\r\n                color=\"primary\"\r\n                class=\"ml10\"\r\n              >\r\n                Start\r\n              </button>\r\n    \r\n    \r\n          </mat-card>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <mat-card class=\"mb20\">\r\n            <mat-card-header>\r\n              <div mat-card-avatar class=\"example-header-image\"><mat-icon>assignment</mat-icon></div>\r\n              <mat-card-title>\r\n             Categories\r\n              </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <h1>4</h1>\r\n            </mat-card-content>\r\n            \r\n              <button mat-button color=\"primary\">View</button>\r\n              <button\r\n                mat-button\r\n                color=\"primary\"\r\n                class=\"ml10\"\r\n              >\r\n                Start\r\n              </button>\r\n    \r\n    \r\n          </mat-card>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <mat-card class=\"mb20\">\r\n            <mat-card-header>\r\n              <div mat-card-avatar class=\"example-header-image\"><mat-icon>assignment</mat-icon></div>\r\n              <mat-card-title>\r\n             Levels\r\n              </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <h1>4</h1>\r\n            </mat-card-content>\r\n            \r\n              <button mat-button color=\"primary\">View</button>\r\n              <button\r\n                mat-button\r\n                color=\"primary\"\r\n                class=\"ml10\"\r\n              >\r\n                Start\r\n              </button>\r\n    \r\n    \r\n          </mat-card>\r\n        </div>\r\n        \r\n  \r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-4\">\r\n    <mat-card class=\"mb20\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"><mat-icon>assignment</mat-icon></div>\r\n        <mat-card-title>\r\n       Quiz\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <h1>4</h1>\r\n      </mat-card-content>\r\n      \r\n        <button mat-button color=\"primary\">View</button>\r\n        <button\r\n          mat-button\r\n          color=\"primary\"\r\n          class=\"ml10\"\r\n        >\r\n          Start\r\n        </button>\r\n\r\n\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <mat-card class=\"mb20\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"><mat-icon>assignment</mat-icon></div>\r\n        <mat-card-title>\r\n       Level\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <h1>4</h1>\r\n      </mat-card-content>\r\n      \r\n        <button mat-button color=\"primary\">View</button>\r\n        <button\r\n          mat-button\r\n          color=\"primary\"\r\n          class=\"ml10\"\r\n        >\r\n          Start\r\n        </button>\r\n\r\n\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <mat-card class=\"mb20\">\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"example-header-image\"><mat-icon>assignment</mat-icon></div>\r\n        <mat-card-title>\r\n       Categories\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <h1>4</h1>\r\n      </mat-card-content>\r\n      \r\n        <button mat-button color=\"primary\">View</button>\r\n        <button\r\n          mat-button\r\n          color=\"primary\"\r\n          class=\"ml10\"\r\n        >\r\n          Start\r\n        </button>\r\n\r\n\r\n    </mat-card>\r\n  </div>\r\n  \r\n\r\n</div>\r\n      </div>\r\n    </div>","import { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CategoryService {\r\n  constructor(private _http: HttpClient) {}\r\n  //load all the cateogries\r\n  public categories(jwt_tkn) {\r\n    var reqHeader = new HttpHeaders({ \r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + jwt_tkn\r\n   });\r\n  return this._http.get(`${baseUrl}/category/`, { headers: reqHeader });\r\n\r\n  }\r\n\r\n  //add new category\r\n  public addCategory(category) {\r\n    return this._http.post(`${baseUrl}/add/category/`, category);\r\n  }\r\n}\r\n\r\n\r\n\r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-view-categories',\r\n  templateUrl: './view-categories.component.html',\r\n  styleUrls: ['./view-categories.component.css'],\r\n})\r\nexport class ViewCategoriesComponent implements OnInit {\r\n  categories = [];\r\n\r\n  constructor(private _category: CategoryService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._category.categories(localStorage.getItem('auth-token')).subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.categories = result.data;\r\n          \r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n\r\n      (error) => {\r\n        //\r\n        console.log(error);\r\n        Swal.fire('Error !!', 'Error in loading data', 'error');\r\n      }\r\n    );\r\n  }\r\n}","\r\n<div class=\"container text-center mt20\">\r\n  <button routerLink=\"/admin/add-category\" mat-raised-button color=\"primary\">\r\n    Add New Category\r\n  </button>\r\n</div>\r\n<div class=\"row mt20\">\r\n<div class=\"col-md-6\" *ngFor=\"let c of categories\">\r\n<mat-card class=\"mt10 mr20 ml20\" >\r\n  \r\n  <mat-card-header>\r\n    <mat-card-title>\r\n    {{ c.cat_title }}\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    {{ c.cat_desc }}\r\n  </mat-card-content>\r\n  <mat-card-action>\r\n  \r\n    <button\r\n    (click)=\"deleteQuiz(q.qId)\"\r\n      mat-flat-button\r\n      color=\"primary\"\r\n    >\r\n      Delete\r\n    </button>\r\n  </mat-card-action>\r\n</mat-card>\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LevelService {\r\n  constructor(private _http: HttpClient) {}\r\n  //load all the cateogries\r\n  public levels() {\r\n    return this._http.get(`${baseUrl}/level/`);\r\n  }\r\n\r\n  //add new category\r\n  public addLevel(level) {\r\n    return this._http.post(`${baseUrl}/add/level/`, level);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MasterService } from './master.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(private _masterService:MasterService,private _router:Router){}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if(this._masterService.isLoggedIn() && localStorage.getItem('role')=='admin'){\r\n        return true;\r\n      }\r\n      else{\r\n       this._router.navigate([\"login\"]);\r\n        return false;\r\n      }\r\n    \r\n  }\r\n  \r\n}\r\n","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { MasterService } from 'src/app/services/master.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  user = null;\r\n  categories;\r\n\r\n\r\n  @Output() closeSideNav = new EventEmitter();\r\n\r\n   onToggleClose() {\r\n    this.closeSideNav.emit();\r\n}\r\n  constructor(public login: LoginService, private router: Router,private _cat: CategoryService, private _snack: MatSnackBar,private _master:MasterService) {}\r\n\r\n  ngOnInit(): void {\r\n   \r\n  \r\n     if(this._master.isLoggedIn()==true){\r\n      this._cat.categories(localStorage.getItem('auth-token')).subscribe(\r\n        (result: any) => {\r\n          if(result.status=='success'){\r\n            this.categories = result.data;\r\n            \r\n            \r\n          }\r\n          else{\r\n            this._snack.open(result.message);\r\n          \r\n          }\r\n         \r\n        },\r\n        (error) => {\r\n          this._snack.open('Error in loading categories from server', '', {\r\n            duration: 3000,\r\n          });\r\n        }\r\n      );\r\n     }\r\n   \r\n\r\n  }\r\n\r\n\r\n  users(){\r\n    return localStorage.getItem('stu_id')&& localStorage.getItem('role')=='student';\r\n  }\r\n  admin(){\r\n    return localStorage.getItem('stu_id')&& localStorage.getItem('role')=='admin';\r\n  }\r\n  \r\n}\r\n","\r\n<mat-nav-list class=\"sidenav-list\" *ngIf=\"users()\">\r\n  \r\n  <a mat-list-item routerLink=\"/user-dashboard/0\" (click)=\"onToggleClose()\">\r\n    <mat-icon mat-list-icon>category</mat-icon> All Quizzes\r\n  </a>\r\n  <a\r\n    [routerLink]=\"'/user-dashboard/' + c.cat_id\"\r\n    mat-list-item\r\n    (click)=\"onToggleClose()\"\r\n    *ngFor=\"let c of categories\"\r\n  >\r\n    <mat-icon mat-list-icon>assignment</mat-icon> {{ c.cat_title }}\r\n</a>\r\n</mat-nav-list>\r\n\r\n   <mat-nav-list class=\"sidenav-list\" *ngIf=\"admin()\">\r\n            <a routerLink=\"/admin/welcome\" mat-list-item (click)=\"onToggleClose()\">\r\n                  <mat-icon mat-list-icon>home</mat-icon> Home\r\n            </a>\r\n                <a mat-list-item routerLink=\"/admin/profile\" (click)=\"onToggleClose()\">\r\n                  <mat-icon mat-list-icon>account_circle</mat-icon> Profile\r\n                </a>\r\n                <a mat-list-item routerLink=\"/admin/categories\" (click)=\"onToggleClose()\">\r\n                  <mat-icon mat-list-icon>list</mat-icon> Categories\r\n                </a>\r\n                <a mat-list-item routerLink=\"/admin/level\" (click)=\"onToggleClose()\">\r\n                  <mat-icon mat-list-icon>waves</mat-icon> Level\r\n                </a>\r\n                <a mat-list-item routerLink=\"/admin/subject\" (click)=\"onToggleClose()\">\r\n                  <mat-icon mat-list-icon>library_books</mat-icon> Subject\r\n                </a>\r\n                <a mat-list-item routerLink=\"/admin/quizzes\" (click)=\"onToggleClose()\">\r\n                  <mat-icon mat-list-icon>quiz</mat-icon> Quizzes\r\n                </a>\r\n                <a mat-list-item routerLink=\"/admin/upload-user\" (click)=\"onToggleClose()\">\r\n                  <mat-icon mat-list-icon>add</mat-icon> Upload User\r\n                </a>\r\n\r\n  </mat-nav-list>\r\n  \r\n\r\n                ","<mat-card style=\"margin-top: 25px;\">\r\n  <mat-action-list>\r\n    <div mat-subheader>Available Categories</div>\r\n\r\n    <button mat-list-item routerLink=\"/user-dashboard/0\">\r\n      <mat-icon mat-list-icon>quiz</mat-icon> All Quizzes\r\n    </button>\r\n    <button\r\n      [routerLink]=\"'/user-dashboard/' + c.cat_id\"\r\n      mat-list-item\r\n      *ngFor=\"let c of categories\"\r\n    >\r\n      <mat-icon mat-list-icon>quiz</mat-icon> {{ c.cat_title }}\r\n    </button>\r\n  </mat-action-list>\r\n</mat-card>\r\n<!-- {{ categories | json }} -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-user',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css'],\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  categories;\r\n  constructor(private _cat: CategoryService, private _snack: MatSnackBar) {}\r\n\r\n  ngOnInit(): void {\r\n    this._cat.categories(localStorage.getItem('auth-token')).subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.categories = result.data;\r\n          \r\n        }\r\n        else{\r\n          this._snack.open(result.message);\r\n        \r\n        }\r\n       \r\n      },\r\n      (error) => {\r\n        this._snack.open('Error in loading categories from server', '', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-quiz',\r\n  templateUrl: './update-quiz.component.html',\r\n  styleUrls: ['./update-quiz.component.css'],\r\n})\r\nexport class UpdateQuizComponent implements OnInit {\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _quiz: QuizService,\r\n    private _cat: CategoryService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  qId = 0;\r\n  quiz;\r\n  categories;\r\n\r\n  ngOnInit(): void {\r\n    this.qId = this._route.snapshot.params.qid;\r\n    // alert(this.qId);\r\n    this._quiz.getQuiz(this.qId).subscribe(\r\n      (data: any) => {\r\n        this.quiz = data;\r\n        console.log(this.quiz);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    this._cat.categories(localStorage.getItem('auth-token')).subscribe(\r\n      (data: any) => {\r\n        this.categories = data;\r\n      },\r\n      (error) => {\r\n        alert('error in loading categories');\r\n      }\r\n    );\r\n  }\r\n\r\n  //update form submit\r\n  public updateData() {\r\n    //validatate\r\n\r\n    this._quiz.updateQuiz(this.quiz).subscribe(\r\n      (data) => {\r\n        Swal.fire('Success !!', 'quiz updated', 'success').then((e) => {\r\n          this._router.navigate(['/admin/quizzes']);\r\n        });\r\n      },\r\n      (error) => {\r\n        Swal.fire('Error', 'error in updating quiz', 'error');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <h1>Update Quiz Quiz</h1>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8 offset-md-2\">\r\n        <form *ngIf=\"quiz\" (submit)=\"updateData()\">\r\n          <!-- title field  -->\r\n          <mat-form-field class=\"w100\" appearance=\"fill\">\r\n            <mat-label>Enter Title</mat-label>\r\n            <input\r\n              [(ngModel)]=\"quiz.title\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"Enter here\"\r\n              matInput\r\n              required\r\n            />\r\n          </mat-form-field>\r\n\r\n          <!-- description field  -->\r\n\r\n          <mat-form-field class=\"w100\" appearance=\"fill\">\r\n            <mat-label>Enter Description </mat-label>\r\n            <textarea\r\n              [(ngModel)]=\"quiz.description\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              placeholder=\"Enter here\"\r\n              matInput\r\n              rows=\"5\"\r\n            ></textarea>\r\n          </mat-form-field>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <!-- //max marks -->\r\n              <mat-form-field class=\"w100\" appearance=\"fill\">\r\n                <mat-label>Maximum Marks</mat-label>\r\n                <input\r\n                  [(ngModel)]=\"quiz.maxMarks\"\r\n                  type=\"text\"\r\n                  name=\"maxMarks\"\r\n                  placeholder=\"Enter here\"\r\n                  matInput\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <!-- number of question to be shown  -->\r\n              <mat-form-field class=\"w100\" appearance=\"fill\">\r\n                <mat-label>Number of Question</mat-label>\r\n                <input\r\n                  [(ngModel)]=\"quiz.numberOfQuestions\"\r\n                  type=\"text\"\r\n                  name=\"numberOfQuestions\"\r\n                  placeholder=\"Enter here\"\r\n                  matInput\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- active field   -->\r\n\r\n          <mat-slide-toggle\r\n            name=\"active\"\r\n            [(ngModel)]=\"quiz.active\"\r\n            class=\"mt20\"\r\n          >\r\n            Publish Status\r\n          </mat-slide-toggle>\r\n\r\n          <br />\r\n          <!-- //category select  -->\r\n          <mat-form-field appearance=\"fill\" class=\"mt20 w100\">\r\n            <mat-label>Categories</mat-label>\r\n            <mat-select name=\"category\" [(ngModel)]=\"quiz.category.cid\">\r\n              <mat-option *ngFor=\"let c of categories\" [value]=\"c.cid\">\r\n                {{ c.title }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <div class=\"container text-center\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n\r\n<!-- {{ quiz | json }} -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LevelService } from 'src/app/services/level.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-level',\r\n  templateUrl: './add-level.component.html',\r\n  styleUrls: ['./add-level.component.css']\r\n})\r\nexport class AddLevelComponent implements OnInit {\r\n\r\n  level = {\r\n    title: '',\r\n    description: '',\r\n    class:'',\r\n  };\r\n\r\n  constructor(\r\n    private _level: LevelService,\r\n    private _snack: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  formSubmit() {\r\n    if (this.level.title.trim() == '' || this.level.title == null) {\r\n      this._snack.open('Title Required !!', '', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    //all done\r\n\r\n    this._level.addLevel(this.level).subscribe(\r\n      (data: any) => {\r\n        this.level.title = '';\r\n        this.level.description = '';\r\n        Swal.fire('Success !!', 'level is added successfuly', 'success');\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire('Error !!', 'Server error !!', 'error');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n    <h1>Add New Level</h1>\r\n  \r\n    <mat-card-content>\r\n      <div class=\"bootstrap-wrapper\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8 offset-md-2\">\r\n            <form (ngSubmit)=\"formSubmit()\">\r\n              <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                <mat-label>Title</mat-label>\r\n  \r\n                <input\r\n                  required\r\n                  autofocus\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  matInput\r\n                  placeholder=\"Enter here\"\r\n                  [(ngModel)]=\"level.title\"\r\n                />\r\n              </mat-form-field>\r\n              <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                <mat-select [(ngModel)]=\"level.class\" multiple name=\"type_list\">\r\n                   <mat-option  [value]=\"1\">1st</mat-option>\r\n                   <mat-option  [value]=\"2\">2nd</mat-option>\r\n                   <mat-option  [value]=\"3\">3rd</mat-option>\r\n                   <mat-option  [value]=\"4\">4th</mat-option>\r\n                   <mat-option  [value]=\"5\">5th</mat-option>\r\n                   <mat-option  [value]=\"6\">6th</mat-option>\r\n                   <mat-option  [value]=\"7\">7th</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n  \r\n              <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                <mat-label>Description</mat-label>\r\n  \r\n                <textarea\r\n                  name=\"description\"\r\n                  matInput\r\n                  placeholder=\"Enter Category Description\"\r\n                  [(ngModel)]=\"level.description\"\r\n                  rows=\"15\"\r\n                ></textarea>\r\n              </mat-form-field>\r\n  \r\n              <div class=\"container text-center mt15\">\r\n                <button mat-raised-button color=\"primary\">Add</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  ","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-upload-user',\r\n  templateUrl: './upload-user.component.html',\r\n  styleUrls: ['./upload-user.component.css']\r\n})\r\nexport class UploadUserComponent implements OnInit {\r\n\r\n  file:any;\r\n  \r\n  \r\n    constructor(private router:Router,private _http:HttpClient,private _user:UserService) { } //DI for Service class\r\n  \r\n    //it is a life cycle or hook of component it will call after constructor\r\n    //it call only one time\r\n  \r\n    ngOnInit(): void {\r\n    \r\n  }\r\n  \r\n  selectFile(event: any){\r\n    this.file = event.target.files[0];\r\nconsole.log(this.file);\r\n  }\r\n    \r\n  uploadFile(){\r\n    let formData = new FormData()\r\n    console.log(formData);\r\n    formData.append('file', this.file)\r\n    console.log(formData)\r\n    this._user.uploadUser(formData).subscribe(\r\n      (data)=>{\r\n        alert(\"Data Inserted To DataBase\");\r\n        this.router.navigate(['/ecommerce']);\r\n      },\r\n      (error)=>{\r\n        alert(\"Something Went Wrong\");\r\n      \r\n      })\r\n  }\r\n  \r\n  \r\n  }\r\n  ","\r\n<mat-card>\r\n    <h1>Add User In Bulk</h1>\r\n  \r\n    <mat-card-content>\r\n      <div class=\"bootstrap-wrapper\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8 offset-md-2\">\r\n            <input  (change)=\"selectFile($event)\" class=\"form-control form-control-lg\" id=\"formFileLg\" type=\"file\">\r\n          <button mat-raised-button color=\"primary\" (click)=\"uploadFile()\">Upload</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  \r\n","let baseUrl = 'https://araaish.shop';\r\nexport default baseUrl;\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css'],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  constructor(private userService: UserService, private snack: MatSnackBar) {}\r\n  userCheck:number\r\n  public user = {\r\n    regId: '',\r\n    name: '',\r\n    class: '',\r\n    school: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n  };\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendit(data){\r\n    if (data.length > 1) {\r\n      \r\n    this.userService.checkIfUserExist({'reg_id' :  data}).subscribe(\r\n      (data: any) => {\r\n    this.userCheck=data;\r\n    console.log(data)\r\n        \r\n      },\r\n  )}\r\n    }\r\n\r\n  formSubmit() {\r\n    console.log(this.user);\r\n    if (this.user.regId == '' || this.user.regId == null) {\r\n      // alert('User is required !!');\r\n      this.snack.open('Registaion Id is required !! ', '', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.user.password == '' || this.user.password == null) {\r\n      // alert('User is required !!');\r\n      this.snack.open('Password is required !! ', '', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    //validate\r\n\r\n    //addUser: userservice\r\n    this.userService.addUser(this.user).subscribe(\r\n      (data: any) => {\r\n        //success\r\n        console.log(data);\r\n        //alert('success');\r\n        Swal.fire('Successfully done !!', 'User id is ' + data.id, 'success');\r\n      },\r\n      (error) => {\r\n        //error\r\n        console.log(error);\r\n        // alert('something went wrong');\r\n        this.snack.open(error.error.text, '', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  //this.user\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3\">\r\n        <mat-card>\r\n          \r\n\r\n          <h2 class=\"text-center vstd-headers\">Student Registration Form</h2>\r\n\r\n          <!-- {{ user | json }} -->\r\n\r\n          <form (ngSubmit)=\"formSubmit()\">\r\n            <!-- Username field -->\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>Registration Id</mat-label>\r\n              <input\r\n                required\r\n                [(ngModel)]=\"user.regId\"\r\n                name=\"regId\"\r\n                type=\"text\"\r\n                oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*?)\\..*/g, '$1');\"\r\n                (blur)=\"sendit($event.target.value)\"\r\n                matInput\r\n                placeholder=\"Enter here\"\r\n              />\r\n              <mat-hint *ngIf=\"userCheck==1\" style=\"color: red;\">Registration Id already taken</mat-hint>\r\n              <mat-hint *ngIf=\"userCheck==0\" style=\"color: green;\">Registration Id available</mat-hint>\r\n            </mat-form-field>\r\n\r\n             <!--  name  -->\r\n             <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>Full Name</mat-label>\r\n              <input\r\n                required\r\n                [(ngModel)]=\"user.name\"\r\n                name=\"name\"\r\n                matInput\r\n                placeholder=\"Enter here\"\r\n              />\r\n            </mat-form-field>\r\n\r\n           <!-- class -->\r\n            <mat-form-field class=\"half-width\" appearance=\"outline\">\r\n              <mat-label>Class</mat-label>\r\n                <mat-select [(ngModel)]=\"user.class\"\r\n                name=\"class\"\r\n                matInput>\r\n                  <mat-option [value]=\"1\">1st</mat-option>\r\n                  <mat-option [value]=\"2\">2nd</mat-option>\r\n                  <mat-option [value]=\"3\">3rd</mat-option>\r\n                  <mat-option [value]=\"4\">4th</mat-option>\r\n                  <mat-option [value]=\"5\">5th</mat-option>\r\n                  <mat-option [value]=\"6\">6th</mat-option>\r\n                  <mat-option [value]=\"7\">7th</mat-option>\r\n                  <mat-option [value]=\"8\">8th</mat-option>\r\n                  <mat-option [value]=\"9\">9th</mat-option>\r\n                  <mat-option [value]=\"10\">10th</mat-option>\r\n                  <mat-option [value]=\"11\">11th</mat-option>\r\n                  <mat-option [value]=\"12\">12th</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n\r\n            <!-- school name  -->\r\n            <mat-form-field class=\"half-width twoMat\" appearance=\"outline\">\r\n              <mat-label>School Code</mat-label>\r\n              <input\r\n                required\r\n                [(ngModel)]=\"user.school\"\r\n                name=\"school\"\r\n                matInput\r\n                placeholder=\"Enter here\"\r\n              />\r\n            </mat-form-field>\r\n            <button type=\"button\" id=\"addSchool\" mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a menu icon\">\r\n              <mat-icon>add</mat-icon>\r\n            </button>\r\n            \r\n            <!-- <-- email --> \r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>Email Address</mat-label>\r\n              <input\r\n                required\r\n                [(ngModel)]=\"user.email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                matInput\r\n                placeholder=\"Enter here\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <!-- phone number -->\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>Phone Number</mat-label>\r\n              <input\r\n                required\r\n                [(ngModel)]=\"user.phone\"\r\n                name=\"phone\"\r\n                type=\"number\"\r\n                matInput\r\n                placeholder=\"Enter here\"\r\n              />\r\n            </mat-form-field>\r\n\r\n            <!-- Password field -->\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>User Password</mat-label>\r\n              <input\r\n                required\r\n                [(ngModel)]=\"user.password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                matInput\r\n                placeholder=\"Enter here\"\r\n              />\r\n            </mat-form-field>\r\n\r\n\r\n            <div class=\"container text-center\" >\r\n              <button *ngIf=\"userCheck==1\" type=\"submit\" mat-raised-button color=\"primary\" style=\"display: none;\" >\r\n                Register\r\n              </button>\r\n              <button *ngIf=\"userCheck==0\" type=\"submit\" mat-raised-button color=\"primary\"  >\r\n                Register\r\n              </button>\r\n              \r\n            </div>\r\n          </form>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuizService {\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  public quizzes() {\r\n    return this._http.get(`${baseUrl}/quiz/`);\r\n  }\r\n\r\n  //add quiz\r\n  public addQuiz(quiz) {\r\n    return this._http.post(`${baseUrl}/add/quiz/`, quiz);\r\n  }\r\n\r\n  //delete quiz\r\n  public deleteQuiz(qId) {\r\n    return this._http.delete(`${baseUrl}/quiz/${qId}`);\r\n  }\r\n\r\n  //get the single quiz\r\n\r\n  public getQuiz(qId) {\r\n    return this._http.get(`${baseUrl}/quiz/${qId}`);\r\n  }\r\n\r\n  //update quiz\r\n  public updateQuiz(quiz) {\r\n    return this._http.put(`${baseUrl}/quiz/`, quiz);\r\n  }\r\n\r\n  //get quizzes of category\r\n  public getQuizzesOfCategory(cid) {\r\n    return this._http.get(`${baseUrl}/quiz/category/${cid}`);\r\n  }\r\n  //qet active quizzes\r\n  public getActiveQuizzes(stu_id) {\r\n    return this._http.get(`${baseUrl}/quiz/active/${stu_id}`);\r\n  }\r\n\r\n  //get active quizzes of category\r\n  public getActiveQuizzesOfCategory(cid) {\r\n    return this._http.get(`${baseUrl}/quiz/category/active/${cid}`);\r\n  }\r\n  public getQuizStartTimeForAStudent(data){\r\n    return this._http.post(`${baseUrl}/ans/get-quiz-start-time`,data);\r\n  }\r\n  public getRanking(qid){\r\n    return this._http.get(`${baseUrl}/result/get-ranking/${qid}`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { SubjectService } from 'src/app/services/subject.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-subject',\r\n  templateUrl: './add-subject.component.html',\r\n  styleUrls: ['./add-subject.component.css']\r\n})\r\nexport class AddSubjectComponent implements OnInit {\r\n\r\n  subject = {\r\n    title: '',\r\n    description: '',\r\n  };\r\n\r\n  constructor(\r\n    private _subject: SubjectService,\r\n    private _snack: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  formSubmit() {\r\n    if (this.subject.title.trim() == '' || this.subject.title == null) {\r\n      this._snack.open('Title Required !!', '', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    //all done\r\n\r\n    this._subject.addSubject(this.subject).subscribe(\r\n      (data: any) => {\r\n        this.subject.title = '';\r\n        this.subject.description = '';\r\n        Swal.fire('Success !!', 'subject is added successfuly', 'success');\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire('Error !!', 'Server error !!', 'error');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n    <h1>Add New Subject</h1>\r\n  \r\n    <mat-card-content>\r\n      <div class=\"bootstrap-wrapper\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8 offset-md-2\">\r\n            <form (ngSubmit)=\"formSubmit()\">\r\n              <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                <mat-label>Title</mat-label>\r\n  \r\n                <input\r\n                  required\r\n                  autofocus\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  matInput\r\n                  placeholder=\"Enter here\"\r\n                  [(ngModel)]=\"subject.title\"\r\n                />\r\n              </mat-form-field>\r\n  \r\n              <mat-form-field class=\"w100\" appearance=\"outline\">\r\n                <mat-label>Description</mat-label>\r\n  \r\n                <textarea\r\n                  name=\"description\"\r\n                  matInput\r\n                  placeholder=\"Enter Category Description\"\r\n                  [(ngModel)]=\"subject.description\"\r\n                  rows=\"15\"\r\n                ></textarea>\r\n              </mat-form-field>\r\n  \r\n              <div class=\"container text-center mt15\">\r\n                <button mat-raised-button color=\"primary\">Add</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  ","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport baseUrl from './helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //add user\r\n\r\n  public addUser(user: any) {\r\n    return this.http.post(`${baseUrl}/user/`, user);\r\n  }\r\n\r\n  public fetchUserDetails(regId:any){\r\n    return this.http.get(`${baseUrl}/user/`, regId)\r\n  }\r\n  public getAnswersheet(show_answersheet:any){\r\n    return this.http.post(`${baseUrl}/get/answer-sheet`, show_answersheet)\r\n  }\r\n  public checkIfUserExist(data:any){\r\n    return this.http.post(`${baseUrl}/user/is-exist`, data)\r\n  }\r\n  public uploadUser(file:any){\r\n    return this.http.post(`${baseUrl}/action/bulk/upload`, file)\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bootstrap-wrapper\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-2\">\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-8\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { LocationStrategy } from '@angular/common';\r\nimport { ThisReceiver } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuestionService } from 'src/app/services/question.service';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-start',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.css'],\r\n})\r\nexport class StartComponent implements OnInit {\r\n  math = Math;\r\n  qid;\r\n  questions;\r\n  length;\r\n\r\n  marksGot = 0;\r\n  correctAnswers = 0;\r\n  attempted = 0;\r\n\r\n  isSubmit = false;\r\n\r\n  timer: number;\r\n  stu_id=localStorage.getItem('stu_id');\r\n  start_time:number;\r\n  minute_per_question : number;\r\n\r\n  constructor(\r\n    private locationSt: LocationStrategy,\r\n    private _route: ActivatedRoute,\r\n    private _question: QuestionService,\r\n    private _quiz: QuizService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.preventBackButton();\r\n    this.qid = this._route.snapshot.params.qid;\r\n    console.log(this.qid);\r\n    this._quiz.getQuizStartTimeForAStudent({\"q_id\" : this.qid,\"stu_id\": this.stu_id}).subscribe(\r\n      (result:any) =>{\r\n        if(result.status=='success'){\r\n        this.start_time = parseInt(result.data[0]['started_at'])\r\n        this.minute_per_question = parseInt(result.data[0]['time_per_qstn_ms'])\r\n        \r\n        }\r\n      }\r\n    );\r\n    this.loadQuestions();\r\n    // var currentTime=Date.now();\r\n    \r\n  }\r\n  loadQuestions() {\r\n    this._question.getQuestionsOfQuizForTest(this.qid).subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.questions = result.data;\r\n          // this.timer = this.questions.length * 1 * 60;\r\n          var sec_per_question =  (this.minute_per_question/1000)/60\r\n          this.timer = this.questions.length * sec_per_question * 60 - ((Date.now()-this.start_time)/1000);\r\n          // console.log(\"Before\"+this.timer)\r\n          this.timer = this.math.trunc(this.timer)\r\n          // console.log(\"After\"+this.timer)\r\n          const quesLength = this.questions.length;\r\n          this.startTimer();\r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n\r\n      (error) => {\r\n        Swal.fire('Error', 'Error in loading questions of quiz', 'error');\r\n      }\r\n    );\r\n  }\r\n\r\n  preventBackButton() {\r\n    history.pushState(null, null, location.href);\r\n    this.locationSt.onPopState(() => {\r\n      history.pushState(null, null, location.href);\r\n    });\r\n  }\r\n\r\n  submitQuiz() {\r\n    Swal.fire({\r\n      title: 'Do you want to submit the quiz?',\r\n      showCancelButton: true,\r\n      confirmButtonText: `Submit`,\r\n      icon: 'info',\r\n    }).then((e) => {\r\n      if (e.isConfirmed) {\r\n        this.evalQuiz();\r\n      }\r\n    });\r\n  }\r\n\r\n  startTimer() {\r\n   \r\n    let t = window.setInterval(() => {\r\n      if (this.timer <= 0) {\r\n        this.evalQuiz();\r\n        clearInterval(t);\r\n      } else {\r\n        this.timer--;\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  getFormattedTime() {\r\n    let mm = Math.floor(this.timer / 60);\r\n    let ss = this.timer - mm * 60;\r\n    return `${mm} min : ${ss} sec`;\r\n  }\r\n\r\n  evalQuiz() {\r\n    //calculation\r\n    //call to sever  to check questions\r\n    // this.questions.push({'stu_id':'3221'})\r\n    const answer_keys = []\r\n    const submit_payload= {}\r\n    submit_payload['stu_id'] = this.stu_id;\r\n    submit_payload['q_id'] = this.qid.toString()\r\n    const temp_json = {}   \r\n    this.questions.forEach(function (value) {\r\n      if (value['givenAnswer'])\r\n      {\r\n      temp_json[value['ques_id']] = [value['givenAnswer']]\r\n      }\r\n      // answer_keys.push({ [value['ques_id']] :value['givenAnswer']})\r\n    });\r\n    submit_payload['data'] = temp_json\r\n    this._question.evalQuiz(submit_payload).subscribe(\r\n      (data: any) => {\r\n        this.marksGot = data.marksGot;\r\n        this.correctAnswers = data.correctAnswers;\r\n        this.attempted = data.attempted;\r\n        this.isSubmit = true;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    // this.isSubmit = true;\r\n    // this.questions.forEach((q) => {\r\n    //   if (q.givenAnswer == q.answer) {\r\n    //     this.correctAnswers++;\r\n    //     let marksSingle =\r\n    //       this.questions[0].quiz.maxMarks / this.questions.length;\r\n    //     this.marksGot += marksSingle;\r\n    //   }\r\n    //   if (q.givenAnswer.trim() != '') {\r\n    //     this.attempted++;\r\n    //   }\r\n    // });\r\n    // console.log('Correct Answers :' + this.correctAnswers);\r\n    // console.log('Marks Got ' + this.marksGot);\r\n    // console.log('attempted ' + this.attempted);\r\n    // console.log(this.questions);\r\n  }\r\n}\r\n","<div class=\"bootstrap-wrapper\" *ngIf=\"!isSubmit\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-2\" >\n        <mat-card style=\"margin-top: 70px\">\n          <mat-card-header>\n            <mat-card-title> Progress </mat-card-title>\n            <mat-card-subtitle>\n              Quiz will automatically submitted when timer reaches to <b>0:0</b>\n            </mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content>\n            <h1 class=\"text-center\">{{ getFormattedTime() }}</h1>\n            <mat-spinner\n              mode=\"determinate\"\n              color=\"primary\"\n              style=\"margin: auto\"\n              [value]=\"timer / (questions.length * 1 * 60) * 10000\"\n            ></mat-spinner>\n          </mat-card-content>\n        </mat-card>\n      </div>\n      <div class=\"col-md-6\">\n        <!-- questions -->\n        <ng-container *ngIf=\"questions\">\n          <h1 class=\"mt20\">\n            On Going Quiz \n          </h1>\n        </ng-container>\n\n        <mat-card *ngFor=\"let q of questions; let i = index\" class=\"mt10 question-mat-card\">\n          <mat-card-content class=\"question-content\">\n            <b>Question {{ i + 1 }}</b> <p [innerHTML]=\"q.content\"></p> \n            <mat-divider> </mat-divider>\n            <div class=\"row mt20\">\n              <div class=\"col-md-6\">\n                <label>\n                  <input\n                  type=\"radio\"\n                  value=\"opt1\"\n                  [name]=\"i\"\n                  [(ngModel)]=\"q.givenAnswer\"\n                />\n                  <span>{{ q.opt1 }}</span>\n                </label>\n                \n              </div>\n              <div class=\"col-md-6\">\n                <label>\n                  <input\n                  type=\"radio\"\n                  value=\"opt2\"\n                  [name]=\"i\"\n                  [(ngModel)]=\"q.givenAnswer\"\n                />\n                  <span>{{ q.opt2 }}</span>\n                </label>\n              </div>\n            </div> \n\n             <div class=\"row mt5\">\n              <div class=\"col-md-6\">\n                <label>\n                  <input\n                  type=\"radio\"\n                  value=\"opt3\"\n                  [name]=\"i\"\n                  [(ngModel)]=\"q.givenAnswer\"\n                />\n                  <span>{{ q.opt3 }}</span>\n                </label>\n              </div>\n              <div class=\"col-md-6\">\n                <label>\n                  <input\n                  type=\"radio\"\n                  value=\"opt4\"\n                  [name]=\"i\"\n                  [(ngModel)]=\"q.givenAnswer\"\n                />\n                  <span>{{ q.opt4 }}</span>\n                </label>\n              </div>\n            </div>\n           \n          </mat-card-content>\n        </mat-card>\n\n        <div class=\"container text-center mt20 mb20\">\n          <button (click)=\"submitQuiz()\" mat-raised-button color=\"primary\">\n            Submit Quiz\n          </button>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n</div>\n<!-- show the result -->\n<div class=\"bootstrap-wrapper\" *ngIf=\"isSubmit\">\n  <div class=\"row mt20\">\n    <div class=\"col-md-6 offset-md-3\">\n      <mat-card>\n        <mat-card-header>\n        </mat-card-header>\n        <mat-card-content class=\"text-center\">\n          <h2>Thankyou For Participating In this Quiz</h2>\n\n        </mat-card-content>\n        <mat-card-actions class=\"text-center\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            [routerLink]=\"'/user-dashboard/0'\"\n          >\n            Home\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { LevelService } from 'src/app/services/level.service';\r\nimport { QuizService } from 'src/app/services/quiz.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-view-quizzes',\r\n  templateUrl: './view-quizzes.component.html',\r\n  styleUrls: ['./view-quizzes.component.css'],\r\n})\r\nexport class ViewQuizzesComponent implements OnInit {\r\n  quizzes = [];\r\n  levels = [];\r\n\r\n  constructor(private _quiz: QuizService,private _level: LevelService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._quiz.quizzes().subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.quizzes = result.data;\r\n          \r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire('Error !', 'Error in loading data !', 'error');\r\n      }\r\n    );\r\n    this._level.levels().subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.levels = result.data;\r\n          \r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire('Error !', 'Error in loading data !', 'error');\r\n      }\r\n    );\r\n  }\r\n\r\n  //\r\n  deleteQuiz(qId) {\r\n    Swal.fire({\r\n      icon: 'info',\r\n      title: 'Are you sure ?',\r\n      confirmButtonText: 'Delete',\r\n      showCancelButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        //delete...\r\n\r\n        this._quiz.deleteQuiz(qId).subscribe(\r\n          (data) => {\r\n            this.quizzes = this.quizzes.filter((quiz) => quiz.qId != qId);\r\n            Swal.fire('Success', 'Quiz deleted ', 'success');\r\n          },\r\n          (error) => {\r\n            Swal.fire('Error', 'Error in deleting quiz', 'error');\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container text-center mt20\">\r\n  <button routerLink=\"/admin/add-quiz\" mat-raised-button color=\"primary\">\r\n    Add New Quiz\r\n  </button>\r\n</div>\r\n<div class=\"row\">\r\n<div class=\"col-md-6\" *ngFor=\"let q of quizzes\">\r\n<mat-card class=\"mt10 mr20 ml20\" >\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"example-header-image\"><img src=\"https://png.pngtree.com/png-vector/20210414/ourlarge/pngtree-quiz-sign-icon-questions-png-image_3129181.jpg\" width=\"40px\" height=\"40px\"></div>\r\n    <mat-card-title>\r\n      {{ q.title }}  Questions: {{ q.no_of_ques }}\r\n    </mat-card-title>\r\n    <mat-card-subtitle>\r\n      <p>{{ q.cat_title }}</p>\r\n      <p>Max Marks: {{ q.max_marks }}</p>\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <p>{{ q.description }}</p>\r\n  </mat-card-content>\r\n  <mat-card-action>\r\n    <button\r\n      [routerLink]=\"'/admin/view-questions/' + q.q_id + '/' + q.title\"\r\n      mat-flat-button\r\n      class=\"btnColor\"\r\n    >\r\n      Questions\r\n    </button>\r\n    \r\n   \r\n    <button\r\n      [routerLink]=\"'/admin/quiz/' + q.q_id\"\r\n      mat-flat-button\r\n      class=\" btnColor\"\r\n    >\r\n      Result\r\n    </button>\r\n    <button\r\n      [routerLink]=\"'/admin/checkAns/' + q.q_id\"\r\n      mat-flat-button\r\n      class=\"btnColor\"\r\n    >\r\n      Check\r\n    </button>\r\n\r\n    <button mat-mini-fab color=\"primary\"\r\n    [routerLink]=\"'/admin/quiz/' + q.q_id\"\r\n    class=\"ml20\" >\r\n      <mat-icon>update</mat-icon>\r\n    </button>\r\n  \r\n    <button mat-mini-fab color=\"primary\" (click)=\"deleteQuiz(q.qId)\" class=\"ml20\" >\r\n      <mat-icon>delete_outline</mat-icon>\r\n    </button>\r\n  </mat-card-action>\r\n</mat-card>\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddCategoryComponent } from './pages/admin/add-category/add-category.component';\r\nimport { AddLevelComponent } from './pages/admin/add-level/add-level/add-level.component';\r\nimport { AddQuestionComponent } from './pages/admin/add-question/add-question.component';\r\nimport { AddQuizComponent } from './pages/admin/add-quiz/add-quiz.component';\r\nimport { AddSubjectComponent } from './pages/admin/add-subject/add-subject/add-subject.component';\r\nimport { CheckAnsComponent } from './pages/admin/chechkAns/check-ans/check-ans.component';\r\n\r\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\r\nimport { UpdateQuizComponent } from './pages/admin/update-quiz/update-quiz.component';\r\nimport { UploadUserComponent } from './pages/admin/upload-user/upload-user/upload-user.component';\r\nimport { ViewCategoriesComponent } from './pages/admin/view-categories/view-categories.component';\r\nimport { ViewLevelComponent } from './pages/admin/view-level/view-level/view-level.component';\r\nimport { ViewQuizQuestionsComponent } from './pages/admin/view-quiz-questions/view-quiz-questions.component';\r\nimport { ViewQuizzesComponent } from './pages/admin/view-quizzes/view-quizzes.component';\r\nimport { ViewSubjectComponent } from './pages/admin/view-subject/view-subject/view-subject.component';\r\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { InstructionsComponent } from './pages/user/instructions/instructions.component';\r\nimport { LoadQuizComponent } from './pages/user/load-quiz/load-quiz.component';\r\nimport { RankingComponent } from './pages/user/ranking/ranking/ranking.component';\r\nimport { StartComponent } from './pages/user/start/start.component';\r\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\r\nimport { ViewAnsComponent } from './pages/user/view-ans/view-ans/view-ans.component';\r\nimport { AdminGuard } from './services/admin.guard';\r\nimport { NormalGuard } from './services/normal.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent,\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'admin',\r\n    component: DashboardComponent,\r\n    canActivate: [AdminGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DashboardComponent,\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent,\r\n      },\r\n      {\r\n        path: 'welcome',\r\n        component: WelcomeComponent,\r\n      },\r\n      {\r\n\r\n        path: 'categories',\r\n        component: ViewCategoriesComponent,\r\n      },\r\n      {\r\n        path: 'add-category',\r\n        component: AddCategoryComponent,\r\n      },\r\n      {\r\n        path: 'quizzes',\r\n        component: ViewQuizzesComponent,\r\n        \r\n      },\r\n      {\r\n        path: 'add-quiz',\r\n        component: AddQuizComponent,\r\n      },\r\n      {\r\n        path: 'quiz/:qid',\r\n        component: UpdateQuizComponent,\r\n      },\r\n      {\r\n        path: 'view-questions/:qid/:title',\r\n        component: ViewQuizQuestionsComponent,\r\n      },\r\n      {\r\n        path: 'add-question/:qid/:title',\r\n        component: AddQuestionComponent,\r\n      },\r\n      {\r\n        path: 'checkAns',\r\n        component: CheckAnsComponent,\r\n      },\r\n      {\r\n        path: 'add-subject',\r\n        component: AddSubjectComponent,\r\n      },\r\n      {\r\n        path: 'add-level',\r\n        component: AddLevelComponent,\r\n      },\r\n      {\r\n        path: 'subject',\r\n        component: ViewSubjectComponent,\r\n      },\r\n      {\r\n        path: 'level',\r\n        component: ViewLevelComponent,\r\n      },\r\n      {\r\n        path: 'upload-user',\r\n        component: UploadUserComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'user-dashboard',\r\n    component: UserDashboardComponent,\r\n    canActivate: [NormalGuard],\r\n    children: [\r\n      {\r\n        path: ':catId',\r\n        component: LoadQuizComponent,\r\n      },\r\n      {\r\n        path: 'instructions/:qid',\r\n        component: InstructionsComponent,\r\n      },\r\n      {\r\n        path: 'view-ans/:qid',\r\n        component: ViewAnsComponent,\r\n      },\r\n      {\r\n        path: 'ranking/:qid',\r\n        component: RankingComponent,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: 'start/:qid',\r\n    component: StartComponent,\r\n    canActivate: [NormalGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuestionService } from 'src/app/services/question.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-view-quiz-questions',\r\n  templateUrl: './view-quiz-questions.component.html',\r\n  styleUrls: ['./view-quiz-questions.component.css'],\r\n})\r\nexport class ViewQuizQuestionsComponent implements OnInit {\r\n  qId;\r\n  qTitle;\r\n  questions = [];\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _question: QuestionService,\r\n    private _snak: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.qId = this._route.snapshot.params.qid;\r\n    this.qTitle = this._route.snapshot.params.title;\r\n    this._question.getQuestionsOfQuiz(this.qId).subscribe(\r\n      (result: any) => {\r\n        if(result.status=='success'){\r\n          this.questions = result.data;\r\n          \r\n        }\r\n        else{\r\n          Swal.fire('Error !!', result.message, 'error')\r\n          \r\n        }\r\n       \r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  //delete quesion\r\n  deleteQuestion(qid) {\r\n    Swal.fire({\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Delete',\r\n      title: 'Are you sure , want to delete this question?',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        //confim\r\n        this._question.deleteQuestion(qid).subscribe(\r\n          (data) => {\r\n            this._snak.open('Question Deleted ', '', {\r\n              duration: 3000,\r\n            });\r\n            this.questions = this.questions.filter((q) => q.quesId != qid);\r\n          },\r\n\r\n          (error) => {\r\n            this._snak.open('Error in deleting questions', '', {\r\n              duration: 3000,\r\n            });\r\n            console.log(error);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1 class=\"mt20\">Questions of {{ qTitle }}</h1>\r\n\r\n<div class=\"bootstrap-wrapper\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"container text-center\">\r\n        <button\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          [routerLink]=\"'/admin/add-question/' + qId + '/' + qTitle\"\r\n        >\r\n          Add Question\r\n        </button>\r\n      </div>\r\n\r\n      <mat-card *ngFor=\"let q of questions; let i = index\" class=\"mt20\">\r\n        <mat-card-content>\r\n          <p>\r\n            <b> Q {{ i + 1 }})\r\n            <span class=\"ml20\" [innerHTML]=\"q.content\"></span>\r\n          </b></p>\r\n\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <p><b>1)</b> {{ q.opt1}}</p>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <p><b>2)</b> {{ q.opt2 }}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <p><b>3)</b> {{ q.opt3 }}</p>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <p><b>4)</b> {{ q.opt4 }}</p>\r\n              </div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n            <p class=\"mt20\"><b>Correct Answer:</b> {{ q.ans }}</p>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n        <mat-card-action>\r\n          <button mat-button (click)=\"deleteQuestion(q.ques_id)\" color=\"warn\">\r\n            Delete\r\n          </button>\r\n          <button mat-button color=\"primary\">Update</button>\r\n        </mat-card-action>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}